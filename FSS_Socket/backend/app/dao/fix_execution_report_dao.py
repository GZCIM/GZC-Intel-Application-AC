from sqlalchemy import text


class FixExecutionReportDAO:
    def __init__(self, con):
        """Initialize with a database connection."""
        self.con = con

    def insert_fix_execution(
        self,
        execution_id,
        client_order_id,
        order_id,
        quote_req_id,
        quote_id,
        order_origination_id,
        symbol,
        side,
        order_qty,
        price,
        last_shares,
        last_px,
        avg_px,
        leaves_qty,
        cum_qty,
        execution_type,
        order_status,
        settl_type,
        settl_date,
        trade_date,
        transact_time,
        currency,
        order_type,
        time_in_force,
        last_market,
        clearing_firm,
        venue,
        counterparty_id,
        text_,
        fix_raw_message,
        mod_user,
    ):
        sql = text(
            """
            INSERT INTO FSS.Tbl_FIX_ExecutionReport (
                ExecutionID,
                ClientOrderId,
                OrderID,
                QuoteReqID,
                QuoteID,
                OrderOriginationID,
                Symbol,
                Side,
                OrderQty,
                Price,
                LastShares,
                LastPx,
                AvgPx,
                LeavesQty,
                CumQty,
                ExecutionType,
                OrderStatus,
                SettlType,
                SettlDate,
                TradeDate,
                TransactTime,
                Currency,
                OrderType,
                TimeInForce,
                LastMarket,
                ClearingFirm,
                Venue,
                CounterpartyID,
                [Text],
                FIXRawMessage,
                ModUser,
                ModTimestamp
            ) VALUES (
                :execution_id,
                :client_order_id,
                :order_id,
                :quote_req_id,
                :quote_id,
                :order_origination_id,
                :symbol,
                :side,
                :order_qty,
                :price,
                :last_shares,
                :last_px,
                :avg_px,
                :leaves_qty,
                :cum_qty,
                :execution_type,
                :order_status,
                :settl_type,
                :settl_date,
                :trade_date,
                :transact_time,
                :currency,
                :order_type,
                :time_in_force,
                :last_market,
                :clearing_firm,
                :venue,
                :counterparty_id,
                :text_,
                :fix_raw_message,
                :mod_user,
                GETDATE()
            )
        """
        )

        with self.con.begin():
            result = self.con.execute(
                sql,
                {
                    "execution_id": execution_id,
                    "client_order_id": client_order_id,
                    "order_id": order_id,
                    "quote_req_id": quote_req_id,
                    "quote_id": quote_id,
                    "order_origination_id": order_origination_id,
                    "symbol": symbol,
                    "side": side,
                    "order_qty": order_qty,
                    "price": price,
                    "last_shares": last_shares,
                    "last_px": last_px,
                    "avg_px": avg_px,
                    "leaves_qty": leaves_qty,
                    "cum_qty": cum_qty,
                    "execution_type": execution_type,
                    "order_status": order_status,
                    "settl_type": settl_type,
                    "settl_date": settl_date,
                    "trade_date": trade_date,
                    "transact_time": transact_time,
                    "currency": currency,
                    "order_type": order_type,
                    "time_in_force": time_in_force,
                    "last_market": last_market,
                    "clearing_firm": clearing_firm,
                    "venue": venue,
                    "counterparty_id": counterparty_id,
                    "text_": text_,
                    "fix_raw_message": fix_raw_message,
                    "mod_user": mod_user,
                },
            )
            return (
                result.rowcount
            )  # Returns the number of rows inserted
