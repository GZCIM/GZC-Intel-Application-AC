{"version":3,"file":"index---rKJWE8.js","sources":["../../src/components/canvas/StaticCanvas.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { useTheme } from '../../contexts/ThemeContext'\nimport { useTabLayout } from '../../core/tabs/TabLayoutManager'\nimport { useViewMemory } from '../../hooks/useViewMemory'\nimport { componentInventory, ComponentMeta } from '../../core/components/ComponentInventory'\nimport { ComponentRenderer } from './ComponentRenderer'\nimport { ComponentPortalModal } from '../ComponentPortalModal'\n\ninterface StaticCanvasProps {\n  tabId: string\n}\n\ninterface ComponentSlot {\n  id: string\n  x: number // percentage\n  y: number // percentage\n  width: number // percentage\n  height: number // percentage\n  componentId?: string\n  locked?: boolean\n}\n\nconst DEFAULT_LAYOUT: ComponentSlot[] = [\n  { id: 'header', x: 0, y: 0, width: 100, height: 15, locked: true },\n  { id: 'main-left', x: 0, y: 15, width: 60, height: 70 },\n  { id: 'main-right', x: 60, y: 15, width: 40, height: 70 },\n  { id: 'footer', x: 0, y: 85, width: 100, height: 15, locked: true }\n]\n\nexport const StaticCanvas: React.FC<StaticCanvasProps> = ({ tabId }) => {\n  const { currentTheme } = useTheme()\n  const { currentLayout, updateTab } = useTabLayout()\n  const { saveLayout: saveToMemory, loadLayout: loadFromMemory } = useViewMemory()\n  const [slots, setSlots] = useState<ComponentSlot[]>(DEFAULT_LAYOUT)\n  const [selectedSlot, setSelectedSlot] = useState<string | null>(null)\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false)\n  const [draggingSlot, setDraggingSlot] = useState<string | null>(null)\n  const [resizingSlot, setResizingSlot] = useState<string | null>(null)\n  const [showComponentPortal, setShowComponentPortal] = useState(false)\n\n  const tab = currentLayout?.tabs.find(t => t.id === tabId)\n  const isEditMode = tab?.editMode || false\n\n  // Load layout from memory or tab configuration\n  useEffect(() => {\n    const loadLayout = async () => {\n      // Try to load from memory first\n      const memoryLayout = await loadFromMemory(`static-canvas-${tabId}`)\n      if (memoryLayout) {\n        setSlots(memoryLayout)\n      } else if (tab?.components && tab.components.length > 0) {\n        // Convert tab components to slots\n        const loadedSlots = tab.components.map(comp => ({\n          id: comp.id,\n          x: comp.position.x,\n          y: comp.position.y, \n          width: comp.position.w,\n          height: comp.position.h,\n          componentId: comp.type === 'empty' ? undefined : comp.type,\n          locked: false\n        }))\n        setSlots(loadedSlots)\n      }\n    }\n    loadLayout()\n  }, [tabId, tab?.components])\n\n  // Listen for save events from edit button\n  useEffect(() => {\n    const handleSaveEvent = (event: CustomEvent) => {\n      if (event.detail.tabId === tabId) {\n        saveLayout()\n      }\n    }\n\n    window.addEventListener('save-static-tab', handleSaveEvent as EventListener)\n    return () => window.removeEventListener('save-static-tab', handleSaveEvent as EventListener)\n  }, [tabId, slots])\n\n  // Manual save function (triggered by Save button)\n  const saveLayout = async () => {\n    const tabComponents = slots.map(slot => ({\n      id: slot.id,\n      type: slot.componentId || 'empty',\n      position: {\n        x: slot.x,\n        y: slot.y,\n        w: slot.width,\n        h: slot.height\n      },\n      props: {},\n      zIndex: 0\n    }))\n\n    // Save to tab configuration\n    updateTab(tabId, { components: tabComponents })\n    \n    // Save to memory for persistence\n    await saveToMemory(`static-canvas-${tabId}`, slots)\n    \n    setHasUnsavedChanges(false)\n  }\n\n  // Assign component to slot\n  const assignComponent = (slotId: string, componentMeta: ComponentMeta) => {\n    setSlots(prev => prev.map(slot => \n      slot.id === slotId \n        ? { ...slot, componentId: componentMeta.id }\n        : slot\n    ))\n    setHasUnsavedChanges(true)\n    setSelectedSlot(null)\n  }\n\n  // Add new slot\n  const addSlot = () => {\n    const newSlot: ComponentSlot = {\n      id: `slot_${Date.now()}`,\n      x: 10,\n      y: 10,\n      width: 30,\n      height: 30,\n      locked: false\n    }\n    setSlots(prev => [...prev, newSlot])\n    setHasUnsavedChanges(true)\n  }\n\n  // Remove slot\n  const removeSlot = (slotId: string) => {\n    setSlots(prev => prev.filter(slot => slot.id !== slotId))\n    setHasUnsavedChanges(true)\n  }\n\n  // Remove component from slot\n  const removeComponent = (slotId: string) => {\n    setSlots(prev => prev.map(slot => \n      slot.id === slotId \n        ? { ...slot, componentId: undefined }\n        : slot\n    ))\n    setHasUnsavedChanges(true)\n  }\n\n  // Handle slot dragging\n  const handleSlotDrag = (slotId: string, deltaX: number, deltaY: number) => {\n    setSlots(prev => prev.map(slot => {\n      if (slot.id === slotId && !slot.locked) {\n        return {\n          ...slot,\n          x: Math.max(0, Math.min(100 - slot.width, slot.x + deltaX)),\n          y: Math.max(0, Math.min(100 - slot.height, slot.y + deltaY))\n        }\n      }\n      return slot\n    }))\n    setHasUnsavedChanges(true)\n  }\n\n  // Handle slot resizing\n  const handleSlotResize = (slotId: string, deltaWidth: number, deltaHeight: number) => {\n    setSlots(prev => prev.map(slot => {\n      if (slot.id === slotId && !slot.locked) {\n        return {\n          ...slot,\n          width: Math.max(10, Math.min(100 - slot.x, slot.width + deltaWidth)),\n          height: Math.max(10, Math.min(100 - slot.y, slot.height + deltaHeight))\n        }\n      }\n      return slot\n    }))\n    setHasUnsavedChanges(true)\n  }\n\n  // Render component in slot\n  const renderSlotContent = (slot: ComponentSlot) => {\n    if (!slot.componentId) {\n      return (\n        <div style={{\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: `2px dashed ${currentTheme.border}`,\n          borderRadius: '8px',\n          color: currentTheme.textSecondary,\n          fontSize: '12px',\n          textAlign: 'center',\n          padding: '16px'\n        }}>\n          {isEditMode ? (\n            <>\n              <div>\n                <div style={{ marginBottom: '8px', fontSize: '24px', opacity: 0.5 }}>üì¶</div>\n                <div>Click to add component</div>\n                <div style={{ fontSize: '10px', opacity: 0.7, marginTop: '4px' }}>\n                  Slot: {slot.id}\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              <div>\n                <div style={{ marginBottom: '8px', fontSize: '24px', opacity: 0.3 }}>üìÑ</div>\n                <div>Empty slot</div>\n              </div>\n            </>\n          )}\n        </div>\n      )\n    }\n\n    // Use ComponentRenderer for actual components\n    return (\n      <ComponentRenderer\n        componentId={slot.componentId}\n        instanceId={`${slot.id}_${slot.componentId}`}\n        props={{}}\n        isEditMode={isEditMode}\n        onRemove={() => removeComponent(slot.id)}\n      />\n    )\n  }\n\n  return (\n    <div style={{\n      height: '100%',\n      width: '100%',\n      backgroundColor: currentTheme.background,\n      position: 'relative'\n    }}>\n\n      {/* Unsaved Changes Indicator */}\n      {hasUnsavedChanges && (\n        <div style={{\n          position: 'absolute',\n          top: '12px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          padding: '6px 12px',\n          backgroundColor: '#f59e0b',\n          color: 'white',\n          fontSize: '11px',\n          borderRadius: '6px',\n          zIndex: 999\n        }}>\n          ‚ö†Ô∏è Unsaved changes - Click Save to persist\n        </div>\n      )}\n\n      {/* Add/Remove Slot Controls (Edit Mode) */}\n      {isEditMode && (\n        <div style={{\n          position: 'absolute',\n          bottom: '16px',\n          right: '16px',\n          display: 'flex',\n          gap: '8px',\n          zIndex: 1000\n        }}>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={addSlot}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: currentTheme.primary,\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              fontSize: '12px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px'\n            }}\n          >\n            <span>‚ûï</span> Add Slot\n          </motion.button>\n        </div>\n      )}\n\n      {/* Canvas Area */}\n      <div style={{\n        height: '100%',\n        width: '100%',\n        padding: '16px',\n        position: 'relative'\n      }}>\n        {slots.map(slot => (\n          <motion.div\n            key={slot.id}\n            drag={isEditMode && !slot.locked}\n            dragMomentum={false}\n            dragElastic={false}\n            onDragEnd={(e, info) => {\n              const container = e.currentTarget.parentElement\n              if (!container) return\n              const rect = container.getBoundingClientRect()\n              const deltaX = (info.offset.x / rect.width) * 100\n              const deltaY = (info.offset.y / rect.height) * 100\n              handleSlotDrag(slot.id, deltaX, deltaY)\n              setDraggingSlot(null)\n            }}\n            onDragStart={() => setDraggingSlot(slot.id)}\n            onClick={() => {\n              if (isEditMode && !slot.componentId) {\n                setSelectedSlot(slot.id)\n                setShowComponentPortal(true)\n              }\n            }}\n            whileHover={isEditMode && !slot.componentId ? { scale: 1.02 } : {}}\n            style={{\n              position: 'absolute',\n              left: `${slot.x}%`,\n              top: `${slot.y}%`,\n              width: `${slot.width}%`,\n              height: `${slot.height}%`,\n              cursor: isEditMode ? (slot.locked ? 'not-allowed' : 'move') : 'default',\n              transition: draggingSlot === slot.id ? 'none' : 'all 0.2s ease'\n            }}\n          >\n            {/* Slot Controls (Edit Mode) */}\n            {isEditMode && (\n              <>\n                {/* Delete Button */}\n                {!slot.locked && (\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      removeSlot(slot.id)\n                    }}\n                    style={{\n                      position: 'absolute',\n                      top: '-8px',\n                      right: '-8px',\n                      width: '20px',\n                      height: '20px',\n                      borderRadius: '50%',\n                      backgroundColor: currentTheme.danger,\n                      color: 'white',\n                      border: 'none',\n                      cursor: 'pointer',\n                      fontSize: '10px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      zIndex: 10\n                    }}\n                  >\n                    √ó\n                  </button>\n                )}\n                \n                {/* Resize Handle */}\n                {!slot.locked && (\n                  <div\n                    onMouseDown={(e) => {\n                      e.stopPropagation()\n                      setResizingSlot(slot.id)\n                    }}\n                    style={{\n                      position: 'absolute',\n                      bottom: '-4px',\n                      right: '-4px',\n                      width: '12px',\n                      height: '12px',\n                      backgroundColor: currentTheme.primary,\n                      cursor: 'nwse-resize',\n                      borderRadius: '2px'\n                    }}\n                  />\n                )}\n              </>\n            )}\n            \n            {renderSlotContent(slot)}\n          </motion.div>\n        ))}\n\n        {/* Empty State */}\n        {slots.every(slot => !slot.componentId) && !isEditMode && (\n          <div style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            textAlign: 'center',\n            color: currentTheme.textSecondary\n          }}>\n            <div style={{ fontSize: '48px', marginBottom: '16px', opacity: 0.3 }}>üìã</div>\n            <div style={{ fontSize: '16px', fontWeight: '500', marginBottom: '8px' }}>\n              Static Canvas\n            </div>\n            <div style={{ fontSize: '12px', maxWidth: '300px' }}>\n              This tab uses a fixed layout. Click Edit to assign components to specific slots.\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Component Portal Modal */}\n      <ComponentPortalModal\n        isOpen={showComponentPortal}\n        onClose={() => {\n          setShowComponentPortal(false)\n          setSelectedSlot(null)\n        }}\n        onComponentSelect={(componentId) => {\n          if (selectedSlot) {\n            const meta = componentInventory.getComponent(componentId)\n            if (meta) {\n              assignComponent(selectedSlot, meta)\n            }\n          }\n          setShowComponentPortal(false)\n          setSelectedSlot(null)\n        }}\n      />\n    </div>\n  )\n}"],"names":["DEFAULT_LAYOUT","StaticCanvas","tabId","currentTheme","useTheme","currentLayout","updateTab","useTabLayout","saveToMemory","loadFromMemory","useViewMemory","slots","setSlots","useState","selectedSlot","setSelectedSlot","hasUnsavedChanges","setHasUnsavedChanges","draggingSlot","setDraggingSlot","resizingSlot","setResizingSlot","showComponentPortal","setShowComponentPortal","tab","t","isEditMode","useEffect","memoryLayout","loadedSlots","comp","handleSaveEvent","event","saveLayout","tabComponents","slot","assignComponent","slotId","componentMeta","prev","addSlot","newSlot","removeSlot","removeComponent","handleSlotDrag","deltaX","deltaY","renderSlotContent","jsx","ComponentRenderer","Fragment","jsxs","motion","e","info","container","rect","ComponentPortalModal","componentId","meta","componentInventory"],"mappings":"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"}