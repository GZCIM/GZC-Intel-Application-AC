{"version":3,"file":"GZCPortfolioComponent-Bs0fwLqd.js","sources":["../../src/components/gzc-portfolio/api.ts","../../src/components/gzc-portfolio/GZCPortfolioComponent.tsx"],"sourcesContent":["// Real API Service for GZC Portfolio - calls backend portfolio_controller.py\nimport {\n    FXForwardTrade,\n    FXPosition,\n    PositionsSummary,\n    TradesSummary,\n} from \"./types\";\n\n// Get the backend URL from environment or default to localhost:5000\nconst BACKEND_URL = import.meta.env.VITE_BACKEND_URL || \"http://localhost:5000\";\n\n// Authentication token provider - will be set by the component\nlet authTokenProvider: (() => Promise<string>) | null = null;\n\n// Function to set the authentication token provider (called by components)\nexport const setGZCPortfolioAuthProvider = (\n    provider: () => Promise<string>\n) => {\n    authTokenProvider = provider;\n};\n\n// Helper function to get access token from MSAL\nasync function getAccessToken(): Promise<string | null> {\n    if (authTokenProvider) {\n        try {\n            const token = await authTokenProvider();\n            console.log(\n                \"GZC Portfolio: Got MSAL token:\",\n                token ? `${token.substring(0, 20)}...` : \"null\"\n            );\n            return token;\n        } catch (error) {\n            console.error(\"Failed to get access token:\", error);\n            return null;\n        }\n    }\n\n    console.error(\n        \"No authentication token provider configured for GZC Portfolio\"\n    );\n    return null;\n}\n\n// Helper function to make authenticated API calls\nasync function apiCall(\n    endpoint: string,\n    options: RequestInit = {}\n): Promise<any> {\n    // eslint-disable-line @typescript-eslint/no-explicit-any\n    const accessToken = await getAccessToken();\n\n    const url = `${BACKEND_URL}${endpoint}`;\n\n    const headers: Record<string, string> = {\n        \"Content-Type\": \"application/json\",\n        ...(options.headers as Record<string, string>),\n    };\n\n    // Add Authorization header if token is available\n    if (accessToken) {\n        headers.Authorization = `Bearer ${accessToken}`;\n        console.log(`Making authenticated API call to: ${url}`);\n        console.log(`🔑 Portfolio Token: ${accessToken.substring(0, 30)}...`);\n        console.log(`🔑 Portfolio Token Length: ${accessToken.length}`);\n        console.log(\n            `🔑 Portfolio Authorization Header: Bearer ${accessToken.substring(\n                0,\n                30\n            )}...`\n        );\n    } else {\n        console.warn(\"No access token found for API call\");\n        console.log(`Making unauthenticated API call to: ${url}`);\n    }\n\n    const response = await fetch(url, {\n        ...options,\n        headers,\n    });\n\n    console.log(`API Response: ${response.status} ${response.statusText}`);\n\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`API Error Response: ${errorText}`);\n        throw new Error(\n            `API call failed: ${response.status} ${response.statusText} - ${errorText}`\n        );\n    }\n\n    const data = await response.json();\n    console.log(\"API Response Data:\", data);\n    return data;\n}\n\n// Transform backend portfolio data to frontend FX Trade format\nfunction transformPortfolioToTrades(portfolioData: any[]): FXForwardTrade[] {\n    // eslint-disable-line @typescript-eslint/no-explicit-any\n    return portfolioData.map((item, index) => ({\n        id: item.id || `TRD${index.toString().padStart(6, \"0\")}`,\n        trade_date:\n            item.trade_date ||\n            item.tradeDate ||\n            new Date().toISOString().split(\"T\")[0],\n        value_date:\n            item.value_date ||\n            item.valueDate ||\n            new Date().toISOString().split(\"T\")[0],\n        currency_pair: item.currency_pair || item.currencyPair || \"EUR/USD\",\n        notional: parseFloat(item.notional || item.amount || 0),\n        rate: parseFloat(item.rate || item.execution_rate || 1.0),\n        market_rate: parseFloat(\n            item.market_rate || item.current_rate || item.rate || 1.0\n        ),\n        pnl: parseFloat(item.pnl || item.unrealized_pnl || 0),\n        counterparty: item.counterparty || item.broker || \"Unknown\",\n        status: item.status || \"ACTIVE\",\n        trader: item.trader || item.user || \"Unknown\",\n        fund_id: item.fund_id || item.fundId || \"6\",\n    }));\n}\n\n// Generate positions from trades data\nfunction generatePositions(trades: FXForwardTrade[]): FXPosition[] {\n    const positionsMap = new Map<string, FXPosition>();\n\n    // Group trades by currency pair\n    trades.forEach((trade) => {\n        const existing = positionsMap.get(trade.currency_pair);\n\n        if (existing) {\n            // Update existing position\n            existing.net_position += trade.notional;\n            existing.trade_count += 1;\n            existing.total_volume += Math.abs(trade.notional);\n\n            // Update weighted average rate\n            existing.weighted_avg_rate =\n                (existing.weighted_avg_rate * (existing.trade_count - 1) +\n                    trade.rate) /\n                existing.trade_count;\n\n            // Update last trade date if this is more recent\n            if (trade.trade_date > existing.last_trade_date) {\n                existing.last_trade_date = trade.trade_date;\n            }\n        } else {\n            // Create new position\n            positionsMap.set(trade.currency_pair, {\n                currency_pair: trade.currency_pair,\n                net_position: trade.notional,\n                trade_count: 1,\n                weighted_avg_rate: trade.rate,\n                total_volume: Math.abs(trade.notional),\n                last_trade_date: trade.trade_date,\n                position_status:\n                    trade.notional > 0\n                        ? \"LONG\"\n                        : trade.notional < 0\n                        ? \"SHORT\"\n                        : \"FLAT\",\n            });\n        }\n    });\n\n    // Update position status based on final net position\n    Array.from(positionsMap.values()).forEach((position) => {\n        position.position_status =\n            position.net_position > 0\n                ? \"LONG\"\n                : position.net_position < 0\n                ? \"SHORT\"\n                : \"FLAT\";\n    });\n\n    return Array.from(positionsMap.values());\n}\n\nexport class PortfolioAPIService {\n    private lastFetchedData: FXForwardTrade[] = [];\n    private updateSubscribers: ((trade: FXForwardTrade) => void)[] = [];\n\n    async fetchTrades(\n        fundId?: string,\n        activeStatus?: string\n    ): Promise<{\n        trades: FXForwardTrade[];\n        summary: TradesSummary;\n    }> {\n        try {\n            console.log(\"Fetching portfolio data from backend...\");\n\n            // Call the backend portfolio endpoint\n            const response = await apiCall(\"/portfolio/\");\n\n            if (response.status !== \"success\") {\n                throw new Error(\"Backend returned error status\");\n            }\n\n            // Transform backend data to frontend format\n            let trades = transformPortfolioToTrades(response.data || []);\n\n            // Store for potential real-time updates\n            this.lastFetchedData = trades;\n\n            // Apply frontend filters\n            if (fundId && fundId !== \"all\") {\n                trades = trades.filter((t) => t.fund_id === fundId);\n            }\n\n            if (activeStatus) {\n                const isActive = activeStatus === \"active\";\n                trades = trades.filter((t) =>\n                    isActive ? t.status === \"ACTIVE\" : t.status === \"CLOSED\"\n                );\n            }\n\n            // Calculate summary\n            const summary: TradesSummary = {\n                total_trades: trades.length,\n                total_notional: trades.reduce((sum, t) => sum + t.notional, 0),\n                total_pnl: trades.reduce((sum, t) => sum + t.pnl, 0),\n                profitable_trades: trades.filter((t) => t.pnl > 0).length,\n                losing_trades: trades.filter((t) => t.pnl < 0).length,\n            };\n\n            console.log(`Fetched ${trades.length} trades from backend`);\n            return { trades, summary };\n        } catch (error) {\n            console.error(\"Error fetching trades from backend:\", error);\n\n            // Return empty data instead of crashing\n            return {\n                trades: [],\n                summary: {\n                    total_trades: 0,\n                    total_notional: 0,\n                    total_pnl: 0,\n                    profitable_trades: 0,\n                    losing_trades: 0,\n                },\n            };\n        }\n    }\n\n    async fetchPositions(\n        fundId?: string,\n        activeStatus?: string\n    ): Promise<{\n        positions: FXPosition[];\n        summary: PositionsSummary;\n    }> {\n        try {\n            // Get trades first, then generate positions\n            const { trades } = await this.fetchTrades(fundId, activeStatus);\n\n            // Generate positions from trades\n            const positions = generatePositions(trades);\n\n            // Calculate summary\n            const summary: PositionsSummary = {\n                total_positions: positions.length,\n                long_positions: positions.filter(\n                    (p) => p.position_status === \"LONG\"\n                ).length,\n                short_positions: positions.filter(\n                    (p) => p.position_status === \"SHORT\"\n                ).length,\n                total_volume: positions.reduce(\n                    (sum, p) => sum + p.total_volume,\n                    0\n                ),\n                unique_pairs: positions.length,\n            };\n\n            console.log(`Generated ${positions.length} positions from trades`);\n            return { positions, summary };\n        } catch (error) {\n            console.error(\"Error fetching positions:\", error);\n\n            // Return empty data instead of crashing\n            return {\n                positions: [],\n                summary: {\n                    total_positions: 0,\n                    long_positions: 0,\n                    short_positions: 0,\n                    total_volume: 0,\n                    unique_pairs: 0,\n                },\n            };\n        }\n    }\n\n    // Simulate real-time updates (can be enhanced with WebSocket later)\n    async subscribeToUpdates(\n        callback: (trade: FXForwardTrade) => void\n    ): Promise<() => void> {\n        this.updateSubscribers.push(callback);\n\n        // Periodically fetch fresh data and notify subscribers of changes\n        const interval = setInterval(async () => {\n            try {\n                const response = await apiCall(\"/portfolio/\");\n                if (response.status === \"success\") {\n                    const freshTrades = transformPortfolioToTrades(\n                        response.data || []\n                    );\n\n                    // Compare with last known data and notify of changes\n                    freshTrades.forEach((trade) => {\n                        const existing = this.lastFetchedData.find(\n                            (t) => t.id === trade.id\n                        );\n                        if (\n                            !existing ||\n                            existing.market_rate !== trade.market_rate ||\n                            existing.pnl !== trade.pnl\n                        ) {\n                            callback(trade);\n                        }\n                    });\n\n                    this.lastFetchedData = freshTrades;\n                }\n            } catch (error) {\n                console.warn(\"Error in real-time update:\", error);\n            }\n        }, 10000); // Every 10 seconds\n\n        // Return unsubscribe function\n        return () => {\n            clearInterval(interval);\n            const index = this.updateSubscribers.indexOf(callback);\n            if (index > -1) {\n                this.updateSubscribers.splice(index, 1);\n            }\n        };\n    }\n}\n\n// Export singleton instance\nexport const portfolioAPI = new PortfolioAPIService();\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useTheme } from \"../../contexts/ThemeContext\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { portfolioAPI, setGZCPortfolioAuthProvider } from \"./api\";\nimport {\n    FXForwardTrade,\n    FXPosition,\n    PositionsSummary,\n    TradesSummary,\n    ViewMode,\n    FundType,\n    ActiveStatus,\n} from \"./types\";\n\ninterface GZCPortfolioComponentProps {\n    width?: number | string;\n    height?: number | string;\n    defaultView?: ViewMode;\n    defaultFund?: FundType;\n}\n\n// Fallback theme for when ThemeContext is not available\nconst fallbackTheme = {\n    surface: \"#1a1a1a\",\n    border: \"#333333\",\n    text: \"#ffffff\",\n    textSecondary: \"#cccccc\",\n    background: \"#0d1117\",\n    primary: \"#7A9E65\",\n    success: \"#28a745\",\n    danger: \"#dc3545\",\n    warning: \"#ffc107\",\n    info: \"#17a2b8\",\n};\n\n// Error boundary component for theme context\nclass ThemeErrorBoundary extends React.Component<\n    { children: React.ReactNode; fallbackTheme: any; componentProps: any },\n    { hasError: boolean }\n> {\n    constructor(props: any) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n        console.warn(\n            \"ThemeContext error caught by boundary:\",\n            error,\n            errorInfo\n        );\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <GZCPortfolioComponentInternal\n                    {...this.props.componentProps}\n                    theme={this.props.fallbackTheme}\n                />\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\n// Safe wrapper component that uses error boundary\nconst GZCPortfolioWrapper: React.FC<GZCPortfolioComponentProps> = (props) => {\n    return (\n        <ThemeErrorBoundary\n            fallbackTheme={fallbackTheme}\n            componentProps={props}\n        >\n            <GZCPortfolioWithTheme {...props} />\n        </ThemeErrorBoundary>\n    );\n};\n\n// Component that uses theme context\nconst GZCPortfolioWithTheme: React.FC<GZCPortfolioComponentProps> = (props) => {\n    const { currentTheme: theme } = useTheme();\n    return <GZCPortfolioComponentInternal {...props} theme={theme} />;\n};\n\n// Main component implementation\nconst GZCPortfolioComponentInternal: React.FC<\n    GZCPortfolioComponentProps & { theme: any }\n> = ({\n    width = \"100%\",\n    height = \"100%\",\n    defaultView = \"trades\",\n    defaultFund = \"6\", // GCF default\n    theme,\n}) => {\n    const [viewMode, setViewMode] = useState<ViewMode>(defaultView);\n    const [trades, setTrades] = useState<FXForwardTrade[]>([]);\n    const [tradesSummary, setTradesSummary] = useState<TradesSummary | null>(\n        null\n    );\n    const [positions, setPositions] = useState<FXPosition[]>([]);\n    const [positionsSummary, setPositionsSummary] =\n        useState<PositionsSummary | null>(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [selectedFund, setSelectedFund] = useState<FundType>(defaultFund);\n    const [isActive, setIsActive] = useState(true);\n\n    // Use real MSAL authentication\n    const { isAuthenticated, getAccessToken } = useAuth();\n\n    // Set up authentication provider for the API\n    useEffect(() => {\n        console.log(\"🔒 GZC Portfolio Auth Setup:\", { isAuthenticated });\n        if (isAuthenticated) {\n            console.log(\"✅ Setting up GZC Portfolio auth provider\");\n            setGZCPortfolioAuthProvider(getAccessToken);\n        }\n    }, [isAuthenticated]);\n\n    // Fetch trades\n    const fetchTrades = useCallback(async () => {\n        try {\n            setLoading(true);\n            setError(null);\n\n            // Authentication is now handled automatically by the API service\n            console.log(\n                \"Making authenticated portfolio API call for trades...\"\n            );\n\n            const activeStatus: ActiveStatus = isActive ? \"active\" : \"inactive\";\n            const { trades: fetchedTrades, summary } =\n                await portfolioAPI.fetchTrades(\n                    selectedFund === \"all\" ? undefined : selectedFund,\n                    activeStatus\n                );\n\n            setTrades(fetchedTrades);\n            setTradesSummary(summary);\n        } catch (err) {\n            console.error(\"Error fetching trades:\", err);\n            setError(\"Failed to fetch trades\");\n        } finally {\n            setLoading(false);\n        }\n    }, [selectedFund, isActive]);\n\n    // Fetch positions\n    const fetchPositions = useCallback(async () => {\n        try {\n            setLoading(true);\n            setError(null);\n\n            // Authentication is now handled automatically by the API service\n            console.log(\n                \"Making authenticated portfolio API call for positions...\"\n            );\n\n            const activeStatus: ActiveStatus = isActive ? \"active\" : \"inactive\";\n            const { positions: fetchedPositions, summary } =\n                await portfolioAPI.fetchPositions(\n                    selectedFund === \"all\" ? undefined : selectedFund,\n                    activeStatus\n                );\n\n            setPositions(fetchedPositions);\n            setPositionsSummary(summary);\n        } catch (err) {\n            console.error(\"Error fetching positions:\", err);\n            setError(\"Failed to fetch positions\");\n        } finally {\n            setLoading(false);\n        }\n    }, [selectedFund, isActive]);\n\n    // Fetch data based on view mode\n    useEffect(() => {\n        console.log(\"🔄 GZC Portfolio useEffect triggered:\", {\n            viewMode,\n            selectedFund,\n            isActive,\n            isAuthenticated,\n        });\n\n        if (!isAuthenticated) {\n            console.log(\"❌ Skipping data fetch - user not authenticated\");\n            return;\n        }\n\n        if (viewMode === \"trades\") {\n            console.log(\"📊 Fetching trades...\");\n            fetchTrades();\n        } else {\n            console.log(\"📊 Fetching positions...\");\n            fetchPositions();\n        }\n    }, [\n        viewMode,\n        selectedFund,\n        isActive,\n        isAuthenticated,\n        fetchTrades,\n        fetchPositions,\n    ]);\n\n    // Subscribe to real-time updates - TEMPORARILY DISABLED\n    // useEffect(() => {\n    //     const unsubscribe = portfolioAPI.subscribeToUpdates((trade) => {\n    //         // Update trades if in trades view\n    //         if (viewMode === \"trades\") {\n    //             setTrades((prev) => {\n    //                 const index = prev.findIndex((t) => t.id === trade.id);\n    //                 if (index >= 0) {\n    //                     const updated = [...prev];\n    //                     updated[index] = trade;\n    //                     return updated;\n    //                 }\n    //                 return [trade, ...prev];\n    //             });\n    //         }\n    //     });\n\n    //     return () => {\n    //         unsubscribe();\n    //     };\n    // }, [viewMode]);\n\n    // Format helpers\n    const formatCurrency = (amount: number) => {\n        return new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format(amount);\n    };\n\n    const formatRate = (rate: number, pair: string) => {\n        if (!rate) return \"-\";\n        const decimals = pair?.includes(\"JPY\") ? 2 : 4;\n        return rate.toFixed(decimals);\n    };\n\n    const formatNumber = (num: number) => {\n        return new Intl.NumberFormat(\"en-US\").format(Math.round(num));\n    };\n\n    const getStatusColor = (status: string) => {\n        switch (status) {\n            case \"ACTIVE\":\n                return theme.success;\n            case \"LONG\":\n                return theme.success;\n            case \"SHORT\":\n                return theme.danger;\n            case \"FLAT\":\n                return theme.textSecondary;\n            default:\n                return theme.textSecondary;\n        }\n    };\n\n    return (\n        <div\n            style={{\n                width,\n                height,\n                background: theme.surface,\n                borderRadius: \"8px\",\n                border: `1px solid ${theme.border}`,\n                display: \"flex\",\n                flexDirection: \"column\",\n                overflow: \"hidden\",\n            }}\n        >\n            {/* Header */}\n            <div\n                style={{\n                    padding: \"16px 20px\",\n                    borderBottom: `1px solid ${theme.border}`,\n                    backgroundColor: theme.surface,\n                }}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div>\n                        <h2\n                            style={{\n                                color: theme.text,\n                                fontSize: \"16px\",\n                                fontWeight: \"600\",\n                                margin: 0,\n                            }}\n                        >\n                            GZC Portfolio -{\" \"}\n                            {viewMode === \"trades\"\n                                ? \"FX Forward Trades\"\n                                : \"FX Positions\"}\n                        </h2>\n                        <div\n                            style={{\n                                color: theme.textSecondary,\n                                fontSize: \"11px\",\n                                marginTop: \"4px\",\n                            }}\n                        >\n                            {viewMode === \"trades\"\n                                ? `${trades.length} trades • ${\n                                      isActive ? \"Active\" : \"Closed\"\n                                  } • ${\n                                      selectedFund === \"all\"\n                                          ? \"All Funds\"\n                                          : selectedFund === \"6\"\n                                          ? \"GCF\"\n                                          : \"GMF\"\n                                  }`\n                                : `${positions.length} positions • ${\n                                      isActive ? \"Active\" : \"Closed\"\n                                  } • ${\n                                      selectedFund === \"all\"\n                                          ? \"All Funds\"\n                                          : selectedFund === \"6\"\n                                          ? \"GCF\"\n                                          : \"GMF\"\n                                  }`}\n                        </div>\n                    </div>\n\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: \"8px\",\n                        }}\n                    >\n                        {/* View Toggle */}\n                        <div\n                            style={{\n                                display: \"flex\",\n                                background: theme.background,\n                                borderRadius: \"4px\",\n                                padding: \"2px\",\n                                border: `1px solid ${theme.border}`,\n                            }}\n                        >\n                            <button\n                                onClick={() => setViewMode(\"trades\")}\n                                disabled={loading}\n                                style={{\n                                    background:\n                                        viewMode === \"trades\"\n                                            ? theme.primary\n                                            : \"transparent\",\n                                    color:\n                                        viewMode === \"trades\"\n                                            ? \"white\"\n                                            : theme.text,\n                                    border: \"none\",\n                                    borderRadius: \"3px\",\n                                    padding: \"4px 10px\",\n                                    fontSize: \"11px\",\n                                    cursor: loading ? \"not-allowed\" : \"pointer\",\n                                    transition: \"all 0.2s\",\n                                    opacity: loading ? 0.7 : 1,\n                                }}\n                            >\n                                Trades\n                            </button>\n                            <button\n                                onClick={() => setViewMode(\"positions\")}\n                                disabled={loading}\n                                style={{\n                                    background:\n                                        viewMode === \"positions\"\n                                            ? theme.primary\n                                            : \"transparent\",\n                                    color:\n                                        viewMode === \"positions\"\n                                            ? \"white\"\n                                            : theme.text,\n                                    border: \"none\",\n                                    borderRadius: \"3px\",\n                                    padding: \"4px 10px\",\n                                    fontSize: \"11px\",\n                                    cursor: loading ? \"not-allowed\" : \"pointer\",\n                                    transition: \"all 0.2s\",\n                                    opacity: loading ? 0.7 : 1,\n                                }}\n                            >\n                                Positions\n                            </button>\n                        </div>\n\n                        {/* Fund Filter */}\n                        <select\n                            value={selectedFund}\n                            onChange={(e) =>\n                                setSelectedFund(e.target.value as FundType)\n                            }\n                            disabled={loading}\n                            style={{\n                                background: theme.background,\n                                color: theme.text,\n                                border: `1px solid ${theme.border}`,\n                                borderRadius: \"4px\",\n                                padding: \"5px 10px\",\n                                fontSize: \"11px\",\n                                cursor: loading ? \"not-allowed\" : \"pointer\",\n                                opacity: loading ? 0.7 : 1,\n                                outline: \"none\",\n                            }}\n                        >\n                            <option value=\"6\">GCF</option>\n                            <option value=\"1\">GMF</option>\n                            <option value=\"all\">All Funds</option>\n                        </select>\n\n                        {/* Active/Closed Toggle */}\n                        <button\n                            onClick={() => setIsActive(!isActive)}\n                            disabled={loading}\n                            style={{\n                                background: theme.primary,\n                                color: \"white\",\n                                border: \"none\",\n                                borderRadius: \"4px\",\n                                padding: \"5px 12px\",\n                                fontSize: \"11px\",\n                                cursor: loading ? \"not-allowed\" : \"pointer\",\n                                transition: \"all 0.2s\",\n                                opacity: loading ? 0.7 : 1,\n                                minWidth: \"80px\",\n                            }}\n                        >\n                            {isActive ? \"📂 Active\" : \"📁 Closed\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {/* Summary Cards */}\n            {!loading &&\n                !error &&\n                (viewMode === \"trades\" ? tradesSummary : positionsSummary) && (\n                    <div\n                        style={{\n                            display: \"grid\",\n                            gridTemplateColumns:\n                                \"repeat(auto-fit, minmax(150px, 1fr))\",\n                            gap: \"12px\",\n                            padding: \"16px\",\n                            borderBottom: `1px solid ${theme.border}`,\n                            backgroundColor: theme.background,\n                        }}\n                    >\n                        {viewMode === \"trades\" && tradesSummary && (\n                            <>\n                                <div\n                                    style={{\n                                        backgroundColor: theme.surface,\n                                        padding: \"12px\",\n                                        borderRadius: \"6px\",\n                                        border: `1px solid ${theme.border}`,\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontSize: \"11px\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Total Notional\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"16px\",\n                                            fontWeight: \"600\",\n                                            color: theme.text,\n                                        }}\n                                    >\n                                        {formatCurrency(\n                                            tradesSummary.total_notional\n                                        )}\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: theme.surface,\n                                        padding: \"12px\",\n                                        borderRadius: \"6px\",\n                                        border: `1px solid ${theme.border}`,\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontSize: \"11px\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Total P&L\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"16px\",\n                                            fontWeight: \"600\",\n                                            color:\n                                                tradesSummary.total_pnl >= 0\n                                                    ? theme.success\n                                                    : theme.danger,\n                                        }}\n                                    >\n                                        {formatCurrency(\n                                            tradesSummary.total_pnl\n                                        )}\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: theme.surface,\n                                        padding: \"12px\",\n                                        borderRadius: \"6px\",\n                                        border: `1px solid ${theme.border}`,\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontSize: \"11px\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Win Rate\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"16px\",\n                                            fontWeight: \"600\",\n                                            color: theme.text,\n                                        }}\n                                    >\n                                        {tradesSummary.total_trades > 0\n                                            ? (\n                                                  (tradesSummary.profitable_trades /\n                                                      tradesSummary.total_trades) *\n                                                  100\n                                              ).toFixed(1)\n                                            : \"0\"}\n                                        %\n                                    </div>\n                                </div>\n                            </>\n                        )}\n                        {viewMode === \"positions\" && positionsSummary && (\n                            <>\n                                <div\n                                    style={{\n                                        backgroundColor: theme.surface,\n                                        padding: \"12px\",\n                                        borderRadius: \"6px\",\n                                        border: `1px solid ${theme.border}`,\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontSize: \"11px\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Long Positions\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"16px\",\n                                            fontWeight: \"600\",\n                                            color: theme.success,\n                                        }}\n                                    >\n                                        {positionsSummary.long_positions}\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: theme.surface,\n                                        padding: \"12px\",\n                                        borderRadius: \"6px\",\n                                        border: `1px solid ${theme.border}`,\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontSize: \"11px\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Short Positions\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"16px\",\n                                            fontWeight: \"600\",\n                                            color: theme.danger,\n                                        }}\n                                    >\n                                        {positionsSummary.short_positions}\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: theme.surface,\n                                        padding: \"12px\",\n                                        borderRadius: \"6px\",\n                                        border: `1px solid ${theme.border}`,\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontSize: \"11px\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Total Volume\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"16px\",\n                                            fontWeight: \"600\",\n                                            color: theme.text,\n                                        }}\n                                    >\n                                        {formatCurrency(\n                                            positionsSummary.total_volume\n                                        )}\n                                    </div>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                )}\n\n            {/* Main Content Area */}\n            <div\n                style={{\n                    flex: 1,\n                    overflow: \"auto\",\n                    padding: \"16px\",\n                }}\n            >\n                {/* Loading State */}\n                {loading && (\n                    <div style={{ textAlign: \"center\", padding: \"40px\" }}>\n                        <motion.div\n                            animate={{ rotate: 360 }}\n                            transition={{\n                                duration: 1,\n                                repeat: Infinity,\n                                ease: \"linear\",\n                            }}\n                            style={{\n                                width: \"40px\",\n                                height: \"40px\",\n                                borderRadius: \"50%\",\n                                border: `3px solid ${theme.border}`,\n                                borderTop: `3px solid ${theme.primary}`,\n                                margin: \"0 auto 16px\",\n                            }}\n                        />\n                        <div\n                            style={{\n                                color: theme.textSecondary,\n                                fontSize: \"13px\",\n                            }}\n                        >\n                            Loading {viewMode}...\n                        </div>\n                    </div>\n                )}\n\n                {/* Error State */}\n                {error && !loading && (\n                    <div\n                        style={{\n                            background: theme.background,\n                            border: `1px solid ${theme.danger}`,\n                            borderRadius: \"4px\",\n                            padding: \"12px\",\n                            color: theme.danger,\n                            marginBottom: \"20px\",\n                            fontSize: \"13px\",\n                        }}\n                    >\n                        {error}\n                    </div>\n                )}\n\n                {/* Trades Table */}\n                {!loading && !error && viewMode === \"trades\" && (\n                    <div style={{ overflowX: \"auto\" }}>\n                        <table\n                            style={{\n                                width: \"100%\",\n                                borderCollapse: \"collapse\",\n                                fontSize: \"12px\",\n                            }}\n                        >\n                            <thead>\n                                <tr\n                                    style={{\n                                        borderBottom: `2px solid ${theme.border}`,\n                                        backgroundColor: theme.background,\n                                    }}\n                                >\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"left\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Trade ID\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"left\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Pair\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Notional\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Rate\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Market\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        P&L\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"left\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Counterparty\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"left\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Status\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {trades.map((trade, index) => (\n                                    <motion.tr\n                                        key={trade.id}\n                                        initial={{ opacity: 0 }}\n                                        animate={{ opacity: 1 }}\n                                        transition={{ delay: index * 0.02 }}\n                                        style={{\n                                            borderBottom: `1px solid ${theme.border}`,\n                                            \"&:hover\": {\n                                                backgroundColor:\n                                                    theme.background,\n                                            },\n                                        }}\n                                    >\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {trade.id}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                color: theme.text,\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            {trade.currency_pair}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {formatCurrency(trade.notional)}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {formatRate(\n                                                trade.rate,\n                                                trade.currency_pair\n                                            )}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {formatRate(\n                                                trade.market_rate,\n                                                trade.currency_pair\n                                            )}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color:\n                                                    trade.pnl >= 0\n                                                        ? theme.success\n                                                        : theme.danger,\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            {formatCurrency(trade.pnl)}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {trade.counterparty}\n                                        </td>\n                                        <td style={{ padding: \"8px\" }}>\n                                            <span\n                                                style={{\n                                                    color: getStatusColor(\n                                                        trade.status\n                                                    ),\n                                                    fontSize: \"10px\",\n                                                    padding: \"2px 6px\",\n                                                    backgroundColor: `${getStatusColor(\n                                                        trade.status\n                                                    )}20`,\n                                                    borderRadius: \"3px\",\n                                                }}\n                                            >\n                                                {trade.status}\n                                            </span>\n                                        </td>\n                                    </motion.tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n\n                {/* Positions Table */}\n                {!loading && !error && viewMode === \"positions\" && (\n                    <div style={{ overflowX: \"auto\" }}>\n                        <table\n                            style={{\n                                width: \"100%\",\n                                borderCollapse: \"collapse\",\n                                fontSize: \"12px\",\n                            }}\n                        >\n                            <thead>\n                                <tr\n                                    style={{\n                                        borderBottom: `2px solid ${theme.border}`,\n                                        backgroundColor: theme.background,\n                                    }}\n                                >\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"left\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Currency Pair\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Net Position\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"center\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Status\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Trades\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Avg Rate\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"right\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Volume\n                                    </th>\n                                    <th\n                                        style={{\n                                            padding: \"8px\",\n                                            textAlign: \"left\",\n                                            color: theme.textSecondary,\n                                        }}\n                                    >\n                                        Last Trade\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {positions.map((position, index) => (\n                                    <motion.tr\n                                        key={position.currency_pair}\n                                        initial={{ opacity: 0 }}\n                                        animate={{ opacity: 1 }}\n                                        transition={{ delay: index * 0.02 }}\n                                        style={{\n                                            borderBottom: `1px solid ${theme.border}`,\n                                            \"&:hover\": {\n                                                backgroundColor:\n                                                    theme.background,\n                                            },\n                                        }}\n                                    >\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                color: theme.text,\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            {position.currency_pair}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color:\n                                                    position.net_position >= 0\n                                                        ? theme.success\n                                                        : theme.danger,\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            {formatCurrency(\n                                                Math.abs(position.net_position)\n                                            )}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"center\",\n                                            }}\n                                        >\n                                            <span\n                                                style={{\n                                                    color: getStatusColor(\n                                                        position.position_status\n                                                    ),\n                                                    fontSize: \"10px\",\n                                                    padding: \"2px 8px\",\n                                                    backgroundColor: `${getStatusColor(\n                                                        position.position_status\n                                                    )}20`,\n                                                    borderRadius: \"3px\",\n                                                }}\n                                            >\n                                                {position.position_status}\n                                            </span>\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {position.trade_count}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {formatRate(\n                                                position.weighted_avg_rate,\n                                                position.currency_pair\n                                            )}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                textAlign: \"right\",\n                                                color: theme.text,\n                                            }}\n                                        >\n                                            {formatCurrency(\n                                                position.total_volume\n                                            )}\n                                        </td>\n                                        <td\n                                            style={{\n                                                padding: \"8px\",\n                                                color: theme.textSecondary,\n                                                fontSize: \"11px\",\n                                            }}\n                                        >\n                                            {new Date(\n                                                position.last_trade_date\n                                            ).toLocaleDateString()}\n                                        </td>\n                                    </motion.tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n\n                {/* Empty State */}\n                {!loading &&\n                    !error &&\n                    ((viewMode === \"trades\" && trades.length === 0) ||\n                        (viewMode === \"positions\" &&\n                            positions.length === 0)) && (\n                        <div\n                            style={{\n                                textAlign: \"center\",\n                                padding: \"60px 20px\",\n                                color: theme.textSecondary,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    fontSize: \"48px\",\n                                    opacity: 0.3,\n                                    marginBottom: \"16px\",\n                                }}\n                            >\n                                {viewMode === \"trades\" ? \"📊\" : \"💹\"}\n                            </div>\n                            <div style={{ fontSize: \"14px\" }}>\n                                No {viewMode} found for the selected filters\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    );\n};\n\nexport const GZCPortfolioComponent: React.FC<GZCPortfolioComponentProps> = (\n    props\n) => {\n    return <GZCPortfolioWrapper {...props} />;\n};\n"],"names":["BACKEND_URL","authTokenProvider","setGZCPortfolioAuthProvider","provider","getAccessToken","token","error","apiCall","endpoint","options","accessToken","url","headers","response","errorText","data","transformPortfolioToTrades","portfolioData","item","index","generatePositions","trades","positionsMap","trade","existing","position","PortfolioAPIService","fundId","activeStatus","t","isActive","summary","sum","positions","p","callback","interval","freshTrades","portfolioAPI","fallbackTheme","ThemeErrorBoundary","React","props","errorInfo","jsx","GZCPortfolioComponentInternal","GZCPortfolioWrapper","GZCPortfolioWithTheme","theme","useTheme","width","height","defaultView","defaultFund","viewMode","setViewMode","useState","setTrades","tradesSummary","setTradesSummary","setPositions","positionsSummary","setPositionsSummary","loading","setLoading","setError","selectedFund","setSelectedFund","setIsActive","isAuthenticated","useAuth","useEffect","fetchTrades","useCallback","fetchedTrades","err","fetchPositions","fetchedPositions","formatCurrency","amount","formatRate","rate","pair","decimals","getStatusColor","status","jsxs","Fragment","motion","GZCPortfolioComponent"],"mappings":"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"}