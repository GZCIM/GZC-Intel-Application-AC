{"version":3,"file":"ComponentPortal-BdSSYFwz.js","sources":["../../src/core/contracts/ContractValidator.ts","../../src/services/ComponentImportService.ts","../../src/services/ComponentExportService.ts","../../src/components/ComponentPortal.tsx"],"sourcesContent":["import { ComponentContract, ComponentRegistryEntry } from './ComponentContract'\n\n/**\n * PROFESSIONAL CONTRACT VALIDATOR\n * \n * Ensures all components meet professional standards\n * Prevents deployment of non-compliant components\n */\n\nexport interface ValidationResult {\n  valid: boolean\n  errors: string[]\n  warnings: string[]\n  score: number // 0-100 compliance score\n}\n\nexport class ContractValidator {\n  \n  /**\n   * Validate complete component contract\n   */\n  static validateContract(contract: ComponentContract): ValidationResult {\n    const errors: string[] = []\n    const warnings: string[] = []\n    let score = 100\n    \n    // Validate metadata\n    const metadataResult = this.validateMetadata(contract.metadata)\n    errors.push(...metadataResult.errors)\n    warnings.push(...metadataResult.warnings)\n    score -= metadataResult.penaltyPoints\n    \n    // Validate capabilities\n    const capabilitiesResult = this.validateCapabilities(contract.capabilities)\n    errors.push(...capabilitiesResult.errors)\n    warnings.push(...capabilitiesResult.warnings)\n    score -= capabilitiesResult.penaltyPoints\n    \n    // Validate lifecycle\n    const lifecycleResult = this.validateLifecycle(contract.lifecycle)\n    errors.push(...lifecycleResult.errors)\n    warnings.push(...lifecycleResult.warnings)\n    score -= lifecycleResult.penaltyPoints\n    \n    // Validate data contract\n    const dataResult = this.validateDataContract(contract.dataContract)\n    errors.push(...dataResult.errors)\n    warnings.push(...dataResult.warnings)\n    score -= dataResult.penaltyPoints\n    \n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      score: Math.max(0, score)\n    }\n  }\n  \n  /**\n   * Validate component metadata\n   */\n  private static validateMetadata(metadata: any): { errors: string[]; warnings: string[]; penaltyPoints: number } {\n    const errors: string[] = []\n    const warnings: string[] = []\n    let penaltyPoints = 0\n    \n    // Required fields\n    if (!metadata.id) {\n      errors.push('Component ID is required')\n      penaltyPoints += 20\n    }\n    \n    if (!metadata.name) {\n      errors.push('Component name is required')\n      penaltyPoints += 20\n    }\n    \n    if (!metadata.displayName) {\n      errors.push('Component display name is required')\n      penaltyPoints += 10\n    }\n    \n    if (!metadata.version) {\n      errors.push('Component version is required')\n      penaltyPoints += 15\n    }\n    \n    if (!metadata.category) {\n      errors.push('Component category is required')\n      penaltyPoints += 15\n    }\n    \n    if (!metadata.description) {\n      warnings.push('Component description is missing')\n      penaltyPoints += 5\n    }\n    \n    // Version format validation\n    if (metadata.version && !/^\\d+\\.\\d+\\.\\d+$/.test(metadata.version)) {\n      warnings.push('Version should follow semantic versioning (x.y.z)')\n      penaltyPoints += 5\n    }\n    \n    // Category validation\n    const validCategories = ['trading', 'analytics', 'portfolio', 'market-data', 'admin', 'docs']\n    if (metadata.category && !validCategories.includes(metadata.category)) {\n      errors.push(`Invalid category. Must be one of: ${validCategories.join(', ')}`)\n      penaltyPoints += 10\n    }\n    \n    return { errors, warnings, penaltyPoints }\n  }\n  \n  /**\n   * Validate component capabilities\n   */\n  private static validateCapabilities(capabilities: any): { errors: string[]; warnings: string[]; penaltyPoints: number } {\n    const errors: string[] = []\n    const warnings: string[] = []\n    let penaltyPoints = 0\n    \n    if (!capabilities) {\n      errors.push('Component capabilities are required')\n      return { errors, warnings, penaltyPoints: 50 }\n    }\n    \n    // Sizing validation\n    if (!capabilities.sizing) {\n      errors.push('Sizing capabilities are required')\n      penaltyPoints += 20\n    } else {\n      if (typeof capabilities.sizing.resizable !== 'boolean') {\n        errors.push('Sizing.resizable must be boolean')\n        penaltyPoints += 10\n      }\n      \n      if (typeof capabilities.sizing.responsive !== 'boolean') {\n        warnings.push('Sizing.responsive should be defined')\n        penaltyPoints += 5\n      }\n    }\n    \n    // Modes validation\n    if (!capabilities.modes) {\n      errors.push('Interaction modes are required')\n      penaltyPoints += 20\n    } else {\n      const modeKeys = ['standalone', 'widget', 'embedded', 'modal']\n      const hasAnyMode = modeKeys.some(key => capabilities.modes[key] === true)\n      \n      if (!hasAnyMode) {\n        errors.push('Component must support at least one interaction mode')\n        penaltyPoints += 15\n      }\n    }\n    \n    // Performance validation\n    if (!capabilities.performance) {\n      warnings.push('Performance characteristics should be defined')\n      penaltyPoints += 10\n    } else {\n      const validComplexity = ['low', 'medium', 'high']\n      if (!validComplexity.includes(capabilities.performance.renderComplexity)) {\n        warnings.push('Invalid render complexity level')\n        penaltyPoints += 5\n      }\n      \n      const validMemory = ['light', 'moderate', 'heavy']\n      if (!validMemory.includes(capabilities.performance.memoryUsage)) {\n        warnings.push('Invalid memory usage level')\n        penaltyPoints += 5\n      }\n    }\n    \n    return { errors, warnings, penaltyPoints }\n  }\n  \n  /**\n   * Validate component lifecycle\n   */\n  private static validateLifecycle(lifecycle: any): { errors: string[]; warnings: string[]; penaltyPoints: number } {\n    const errors: string[] = []\n    const warnings: string[] = []\n    let penaltyPoints = 0\n    \n    if (!lifecycle) {\n      errors.push('Component lifecycle is required')\n      return { errors, warnings, penaltyPoints: 30 }\n    }\n    \n    // Required lifecycle methods\n    const requiredMethods = ['initialize', 'onMount', 'onResize', 'onUnmount']\n    \n    for (const method of requiredMethods) {\n      if (typeof lifecycle[method] !== 'function') {\n        errors.push(`Lifecycle method '${method}' is required`)\n        penaltyPoints += 10\n      }\n    }\n    \n    // Optional but recommended methods\n    const recommendedMethods = ['onError', 'onDataUpdate']\n    \n    for (const method of recommendedMethods) {\n      if (typeof lifecycle[method] !== 'function') {\n        warnings.push(`Lifecycle method '${method}' is recommended`)\n        penaltyPoints += 2\n      }\n    }\n    \n    return { errors, warnings, penaltyPoints }\n  }\n  \n  /**\n   * Validate data contract\n   */\n  private static validateDataContract(dataContract: any): { errors: string[]; warnings: string[]; penaltyPoints: number } {\n    const errors: string[] = []\n    const warnings: string[] = []\n    let penaltyPoints = 0\n    \n    if (!dataContract) {\n      errors.push('Data contract is required')\n      return { errors, warnings, penaltyPoints: 25 }\n    }\n    \n    // Validate inputs\n    if (!Array.isArray(dataContract.inputs)) {\n      errors.push('Data contract inputs must be an array')\n      penaltyPoints += 15\n    } else {\n      dataContract.inputs.forEach((input: any, index: number) => {\n        if (!input.id) {\n          errors.push(`Input ${index}: ID is required`)\n          penaltyPoints += 5\n        }\n        \n        if (!input.type) {\n          errors.push(`Input ${index}: Type is required`)\n          penaltyPoints += 5\n        }\n        \n        if (typeof input.required !== 'boolean') {\n          warnings.push(`Input ${index}: Required flag should be boolean`)\n          penaltyPoints += 2\n        }\n      })\n    }\n    \n    // Validate outputs\n    if (!Array.isArray(dataContract.outputs)) {\n      errors.push('Data contract outputs must be an array')\n      penaltyPoints += 15\n    }\n    \n    return { errors, warnings, penaltyPoints }\n  }\n  \n  /**\n   * Validate complete registry entry\n   */\n  static validateRegistryEntry(entry: ComponentRegistryEntry): ValidationResult {\n    const contractResult = this.validateContract(entry.contract)\n    \n    // Additional registry-specific validations\n    const errors = [...contractResult.errors]\n    const warnings = [...contractResult.warnings]\n    let score = contractResult.score\n    \n    if (!entry.component) {\n      errors.push('Component implementation is required')\n      score -= 20\n    }\n    \n    if (!entry.loader) {\n      errors.push('Component loader is required')\n      score -= 15\n    }\n    \n    if (!entry.status) {\n      warnings.push('Component status should be defined')\n      score -= 5\n    }\n    \n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      score: Math.max(0, score)\n    }\n  }\n  \n  /**\n   * Generate compliance report\n   */\n  static generateComplianceReport(contract: ComponentContract): string {\n    const result = this.validateContract(contract)\n    \n    let report = `Component Compliance Report\\n`\n    report += `Component: ${contract.metadata.name} v${contract.metadata.version}\\n`\n    report += `Score: ${result.score}/100\\n\\n`\n    \n    if (result.errors.length > 0) {\n      report += `ERRORS (${result.errors.length}):\\n`\n      result.errors.forEach((error, index) => {\n        report += `  ${index + 1}. ${error}\\n`\n      })\n      report += '\\n'\n    }\n    \n    if (result.warnings.length > 0) {\n      report += `WARNINGS (${result.warnings.length}):\\n`\n      result.warnings.forEach((warning, index) => {\n        report += `  ${index + 1}. ${warning}\\n`\n      })\n      report += '\\n'\n    }\n    \n    if (result.valid) {\n      report += '✅ Component meets professional standards\\n'\n    } else {\n      report += '❌ Component does not meet professional standards\\n'\n    }\n    \n    return report\n  }\n}","import { ComponentContract } from '../core/contracts/ComponentContract'\nimport { ContractValidator } from '../core/contracts/ContractValidator'\nimport { ProfessionalComponentRegistry } from '../core/registry/ProfessionalComponentRegistry'\nimport { componentInventory } from '../core/components/ComponentInventory'\n\ninterface Port3200Component {\n  id: string\n  name: string\n  description: string\n  component: string // Component code as string\n  config?: {\n    size?: { width: number; height: number }\n    category?: string\n    tags?: string[]\n  }\n}\n\ninterface ImportResult {\n  success: boolean\n  componentId?: string\n  errors?: string[]\n  warnings?: string[]\n}\n\nexport class ComponentImportService {\n  private validator = new ContractValidator()\n\n  /**\n   * Fetch component from port 3200\n   */\n  async fetchFromPort3200(componentId: string): Promise<Port3200Component | null> {\n    try {\n      const response = await fetch(`http://localhost:3200/api/components/${componentId}`)\n      if (!response.ok) {\n        throw new Error(`Failed to fetch component: ${response.statusText}`)\n      }\n      return await response.json()\n    } catch (error) {\n      console.error(`Error fetching component from port 3200:`, error)\n      return null\n    }\n  }\n\n  /**\n   * List available components from port 3200\n   */\n  async listPort3200Components(): Promise<Port3200Component[]> {\n    try {\n      const response = await fetch('http://localhost:3200/api/components')\n      if (!response.ok) {\n        throw new Error(`Failed to list components: ${response.statusText}`)\n      }\n      return await response.json()\n    } catch (error) {\n      console.error(`Error listing components from port 3200:`, error)\n      return []\n    }\n  }\n\n  /**\n   * Migrate port 3200 component to our format\n   */\n  private migrateToContract(source: Port3200Component): ComponentContract {\n    return {\n      metadata: {\n        id: source.id,\n        name: source.name,\n        displayName: source.name.replace(/([A-Z])/g, ' $1').trim(),\n        version: '1.0.0',\n        description: source.description,\n        author: 'Port 3200 Import',\n        category: source.config?.category || 'imported',\n        tags: source.config?.tags || ['imported', 'port-3200'],\n        dependencies: [],\n        repository: 'http://localhost:3200'\n      },\n      capabilities: {\n        sizing: {\n          defaultSize: {\n            width: source.config?.size?.width || 400,\n            height: source.config?.size?.height || 300\n          },\n          minSize: { width: 200, height: 150 },\n          maxSize: { width: 800, height: 600 },\n          resizable: true,\n          aspectRatio: null\n        },\n        modes: {\n          display: ['full', 'compact'],\n          interaction: ['view', 'edit'],\n          themes: ['light', 'dark']\n        },\n        features: {\n          realtime: false,\n          offline: false,\n          collaborative: false,\n          exportable: true,\n          printable: false\n        },\n        performance: {\n          renderTime: 100,\n          updateInterval: null,\n          maxDataPoints: 1000,\n          throttle: null\n        }\n      },\n      lifecycle: {\n        onMount: 'componentDidMount',\n        onUnmount: 'componentWillUnmount',\n        onUpdate: 'componentDidUpdate',\n        onError: 'componentDidCatch',\n        onResize: null,\n        onThemeChange: null,\n        onModeChange: null\n      },\n      dataContract: {\n        props: {\n          required: [],\n          optional: [\n            {\n              name: 'config',\n              type: 'object',\n              description: 'Component configuration'\n            }\n          ]\n        },\n        state: {\n          managed: [],\n          exposed: []\n        },\n        events: {\n          emitted: [],\n          handled: []\n        },\n        methods: {\n          public: [],\n          private: []\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate imported component\n   */\n  async validateImport(component: Port3200Component): Promise<{ valid: boolean; report: any }> {\n    const contract = this.migrateToContract(component)\n    const validation = this.validator.validateComponent(contract)\n    \n    return {\n      valid: validation.score >= 70, // 70% minimum score for import\n      report: validation\n    }\n  }\n\n  /**\n   * Import component from port 3200\n   */\n  async importComponent(componentId: string): Promise<ImportResult> {\n    try {\n      // 1. Fetch from port 3200\n      const sourceComponent = await this.fetchFromPort3200(componentId)\n      if (!sourceComponent) {\n        return {\n          success: false,\n          errors: [`Component ${componentId} not found on port 3200`]\n        }\n      }\n\n      // 2. Validate\n      const { valid, report } = await this.validateImport(sourceComponent)\n      if (!valid) {\n        return {\n          success: false,\n          errors: report.errors.map((e: any) => e.message),\n          warnings: report.warnings.map((w: any) => w.message)\n        }\n      }\n\n      // 3. Convert to contract\n      const contract = this.migrateToContract(sourceComponent)\n\n      // 4. Write component file\n      const componentPath = await this.writeComponentFile(sourceComponent)\n      if (!componentPath) {\n        return {\n          success: false,\n          errors: ['Failed to write component file']\n        }\n      }\n\n      // 5. Register in component inventory\n      componentInventory.addComponent({\n        id: contract.metadata.id,\n        name: contract.metadata.name,\n        displayName: contract.metadata.displayName,\n        category: contract.metadata.category,\n        description: contract.metadata.description,\n        defaultSize: { \n          w: Math.round(contract.capabilities.sizing.defaultSize.width / 100), \n          h: Math.round(contract.capabilities.sizing.defaultSize.height / 100) \n        },\n        minSize: { \n          w: Math.round(contract.capabilities.sizing.minSize.width / 100), \n          h: Math.round(contract.capabilities.sizing.minSize.height / 100) \n        },\n        tags: contract.metadata.tags,\n        complexity: 'medium',\n        quality: 'port-3200',\n        source: 'port-3200'\n      })\n\n      return {\n        success: true,\n        componentId: contract.metadata.id,\n        warnings: report.warnings.map((w: any) => w.message)\n      }\n\n    } catch (error) {\n      return {\n        success: false,\n        errors: [`Import failed: ${error.message}`]\n      }\n    }\n  }\n\n  /**\n   * Write component file to imported directory\n   */\n  private async writeComponentFile(component: Port3200Component): Promise<string | null> {\n    try {\n      // This would normally write to file system\n      // For now, we'll simulate by logging\n      console.log(`Would write component ${component.id} to /src/components/imported/${component.id}.tsx`)\n      \n      // Component code template\n      const componentCode = `\nimport React from 'react'\nimport { useTheme } from '../../contexts/ThemeContext'\n\n// Imported from Port 3200\nexport const ${component.name}: React.FC<any> = (props) => {\n  const { currentTheme } = useTheme()\n  \n  return (\n    <div style={{\n      width: '100%',\n      height: '100%',\n      backgroundColor: currentTheme.surface,\n      padding: '16px',\n      borderRadius: '8px'\n    }}>\n      <h3>${component.name}</h3>\n      <p>${component.description}</p>\n      {/* Original component code would go here */}\n    </div>\n  )\n}\n`\n      \n      return `/src/components/imported/${component.id}.tsx`\n    } catch (error) {\n      console.error('Failed to write component file:', error)\n      return null\n    }\n  }\n\n  /**\n   * Batch import multiple components\n   */\n  async importMultiple(componentIds: string[]): Promise<Map<string, ImportResult>> {\n    const results = new Map<string, ImportResult>()\n    \n    for (const id of componentIds) {\n      const result = await this.importComponent(id)\n      results.set(id, result)\n    }\n    \n    return results\n  }\n}\n\n// Singleton instance - commented out due to ProfessionalComponentRegistry issue\n// export const componentImportService = new ComponentImportService()","import { ComponentContract } from '../core/contracts/ComponentContract'\nimport { componentInventory, ComponentMeta } from '../core/components/ComponentInventory'\n\ninterface ExportFormat {\n  id: string\n  name: string\n  displayName: string\n  description: string\n  version: string\n  source: string\n  contract: ComponentContract\n  implementation: {\n    path: string\n    dependencies: string[]\n  }\n  metadata: ComponentMeta\n}\n\nexport class ComponentExportService {\n  /**\n   * Export component in a format compatible with other ports\n   */\n  async exportComponent(componentId: string): Promise<ExportFormat | null> {\n    const meta = componentInventory.getComponent(componentId)\n    if (!meta) {\n      console.error(`Component ${componentId} not found`)\n      return null\n    }\n\n    // Build export format\n    const exportData: ExportFormat = {\n      id: meta.id,\n      name: meta.name,\n      displayName: meta.displayName,\n      description: meta.description,\n      version: '1.0.0',\n      source: 'port-3500',\n      contract: this.buildContract(meta),\n      implementation: {\n        path: `/components/widgets/${meta.name}.tsx`,\n        dependencies: meta.dependencies || []\n      },\n      metadata: meta\n    }\n\n    return exportData\n  }\n\n  /**\n   * Build component contract from metadata\n   */\n  private buildContract(meta: ComponentMeta): ComponentContract {\n    return {\n      metadata: {\n        id: meta.id,\n        name: meta.name,\n        displayName: meta.displayName,\n        version: '1.0.0',\n        description: meta.description,\n        author: 'GZC Intel App',\n        category: meta.category,\n        tags: meta.tags,\n        dependencies: meta.dependencies || [],\n        repository: 'http://localhost:3500'\n      },\n      capabilities: {\n        sizing: {\n          defaultSize: {\n            width: meta.defaultSize.w * 100,\n            height: meta.defaultSize.h * 100\n          },\n          minSize: {\n            width: meta.minSize.w * 100,\n            height: meta.minSize.h * 100\n          },\n          maxSize: meta.maxSize ? {\n            width: meta.maxSize.w * 100,\n            height: meta.maxSize.h * 100\n          } : null,\n          resizable: meta.canResize !== false,\n          aspectRatio: null\n        },\n        modes: {\n          display: ['full', 'compact'],\n          interaction: ['view', 'edit'],\n          themes: ['light', 'dark']\n        },\n        features: {\n          realtime: meta.tags.includes('real-time'),\n          offline: false,\n          collaborative: false,\n          exportable: true,\n          printable: false\n        },\n        performance: {\n          renderTime: 100,\n          updateInterval: meta.tags.includes('real-time') ? 1000 : null,\n          maxDataPoints: 1000,\n          throttle: null\n        }\n      },\n      lifecycle: {\n        onMount: 'useEffect',\n        onUnmount: 'cleanup',\n        onUpdate: 'deps',\n        onError: 'errorBoundary',\n        onResize: meta.canResize ? 'handleResize' : null,\n        onThemeChange: 'useTheme',\n        onModeChange: null\n      },\n      dataContract: {\n        props: {\n          required: [],\n          optional: Object.entries(meta.props || {}).map(([name, defaultValue]) => ({\n            name,\n            type: typeof defaultValue,\n            description: `${name} property`,\n            default: defaultValue\n          }))\n        },\n        state: {\n          managed: [],\n          exposed: []\n        },\n        events: {\n          emitted: [],\n          handled: []\n        },\n        methods: {\n          public: [],\n          private: []\n        }\n      }\n    }\n  }\n\n  /**\n   * Export component as standalone package\n   */\n  async exportAsPackage(componentId: string): Promise<{ \n    packageJson: any, \n    componentCode: string,\n    readme: string \n  } | null> {\n    const exportData = await this.exportComponent(componentId)\n    if (!exportData) return null\n\n    const packageJson = {\n      name: `@gzc-intel/${exportData.id}`,\n      version: exportData.version,\n      description: exportData.description,\n      main: 'index.js',\n      types: 'index.d.ts',\n      exports: {\n        '.': './index.js',\n        './contract': './contract.json'\n      },\n      peerDependencies: {\n        'react': '^18.0.0',\n        'react-dom': '^18.0.0'\n      },\n      dependencies: exportData.implementation.dependencies.reduce((acc, dep) => {\n        acc[dep] = '*'\n        return acc\n      }, {} as Record<string, string>),\n      gzcIntel: {\n        componentId: exportData.id,\n        source: exportData.source,\n        quality: exportData.metadata.quality,\n        contract: exportData.contract\n      }\n    }\n\n    const readme = `# ${exportData.displayName}\n\n${exportData.description}\n\n## Installation\n\n\\`\\`\\`bash\nnpm install @gzc-intel/${exportData.id}\n\\`\\`\\`\n\n## Usage\n\n\\`\\`\\`tsx\nimport { ${exportData.name} } from '@gzc-intel/${exportData.id}'\n\nfunction App() {\n  return <${exportData.name} />\n}\n\\`\\`\\`\n\n## Component Contract\n\n- **Category**: ${exportData.metadata.category}\n- **Tags**: ${exportData.metadata.tags.join(', ')}\n- **Quality**: ${exportData.metadata.quality}\n- **Source**: ${exportData.source}\n\n## Props\n\n${exportData.contract.dataContract.props.optional.map(prop => \n  `- **${prop.name}** (${prop.type}): ${prop.description}`\n).join('\\n')}\n`\n\n    const componentCode = await this.getComponentSource(componentId)\n\n    return {\n      packageJson,\n      componentCode: componentCode || '// Component implementation',\n      readme\n    }\n  }\n\n  /**\n   * Get component source code\n   */\n  private async getComponentSource(componentId: string): Promise<string | null> {\n    // In a real implementation, this would read the actual component file\n    // For now, return a template\n    return `import React from 'react'\n\nexport const Component: React.FC = (props) => {\n  // Component implementation\n  return <div>Component ${componentId}</div>\n}`\n  }\n\n  /**\n   * Export multiple components\n   */\n  async exportMultiple(componentIds: string[]): Promise<Map<string, ExportFormat>> {\n    const exports = new Map<string, ExportFormat>()\n    \n    for (const id of componentIds) {\n      const exportData = await this.exportComponent(id)\n      if (exportData) {\n        exports.set(id, exportData)\n      }\n    }\n    \n    return exports\n  }\n\n  /**\n   * Generate export manifest for sharing\n   */\n  async generateManifest(componentIds: string[]): Promise<{\n    version: string\n    timestamp: string\n    source: string\n    components: ExportFormat[]\n  }> {\n    const components: ExportFormat[] = []\n    \n    for (const id of componentIds) {\n      const exportData = await this.exportComponent(id)\n      if (exportData) {\n        components.push(exportData)\n      }\n    }\n\n    return {\n      version: '1.0.0',\n      timestamp: new Date().toISOString(),\n      source: 'port-3500',\n      components\n    }\n  }\n}\n\n// Singleton instance\nexport const componentExportService = new ComponentExportService()","import React, { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { useTheme } from '../contexts/ThemeContext'\nimport { ComponentImportService } from '../services/ComponentImportService'\nimport { componentExportService } from '../services/ComponentExportService'\nimport { componentInventory } from '../core/components/ComponentInventory'\n\ninterface Port3200Component {\n  id: string\n  name: string\n  description: string\n  quality?: string\n}\n\nexport const ComponentPortal: React.FC = () => {\n  const { currentTheme } = useTheme()\n  const [activeTab, setActiveTab] = useState<'import' | 'export'>('import')\n  const [port3200Components, setPort3200Components] = useState<Port3200Component[]>([])\n  const [localComponents, setLocalComponents] = useState<any[]>([])\n  const [loading, setLoading] = useState(false)\n  const [selectedComponents, setSelectedComponents] = useState<Set<string>>(new Set())\n  const [importResults, setImportResults] = useState<Map<string, any>>(new Map())\n  \n  // Create instance of ComponentImportService\n  const componentImportService = new ComponentImportService()\n\n  // Load available components\n  useEffect(() => {\n    if (activeTab === 'import') {\n      loadPort3200Components()\n    } else {\n      loadLocalComponents()\n    }\n  }, [activeTab])\n\n  const loadPort3200Components = async () => {\n    setLoading(true)\n    try {\n      const components = await componentImportService.listPort3200Components()\n      setPort3200Components(components)\n    } catch (error) {\n      console.error('Failed to load port 3200 components:', error)\n      // Mock data for demo\n      setPort3200Components([\n        {\n          id: 'advanced-chart',\n          name: 'AdvancedChart',\n          description: 'Professional trading chart with indicators',\n          quality: 'port-3200'\n        },\n        {\n          id: 'portfolio-grid',\n          name: 'PortfolioGrid',\n          description: 'Real-time portfolio holdings grid',\n          quality: 'port-3200'\n        },\n        {\n          id: 'order-book',\n          name: 'OrderBook',\n          description: 'Live order book visualization',\n          quality: 'port-3200'\n        }\n      ])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const loadLocalComponents = () => {\n    const components = componentInventory.searchComponents('')\n      .filter(c => c.source === 'internal' || c.quality === 'enhanced')\n    setLocalComponents(components)\n  }\n\n  const handleImport = async () => {\n    setLoading(true)\n    const results = new Map()\n\n    for (const componentId of selectedComponents) {\n      try {\n        const result = await componentImportService.importComponent(componentId)\n        results.set(componentId, result)\n      } catch (error) {\n        results.set(componentId, {\n          success: false,\n          errors: [`Import failed: ${error.message}`]\n        })\n      }\n    }\n\n    setImportResults(results)\n    setSelectedComponents(new Set())\n    setLoading(false)\n  }\n\n  const handleExport = async () => {\n    setLoading(true)\n    \n    for (const componentId of selectedComponents) {\n      try {\n        const exportData = await componentExportService.exportAsPackage(componentId)\n        if (exportData) {\n          // In a real app, this would download or send to port 3200\n          console.log(`Exported ${componentId}:`, exportData)\n        }\n      } catch (error) {\n        console.error(`Failed to export ${componentId}:`, error)\n      }\n    }\n\n    setSelectedComponents(new Set())\n    setLoading(false)\n  }\n\n  const toggleSelection = (componentId: string) => {\n    const newSelection = new Set(selectedComponents)\n    if (newSelection.has(componentId)) {\n      newSelection.delete(componentId)\n    } else {\n      newSelection.add(componentId)\n    }\n    setSelectedComponents(newSelection)\n  }\n\n  return (\n    <div style={{\n      height: '100%',\n      width: '100%',\n      backgroundColor: currentTheme.background,\n      display: 'flex',\n      flexDirection: 'column'\n    }}>\n      {/* Header */}\n      <div style={{\n        padding: '16px 24px',\n        backgroundColor: currentTheme.surface,\n        borderBottom: `1px solid ${currentTheme.border}`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n        <h2 style={{\n          margin: 0,\n          fontSize: '18px',\n          fontWeight: '600',\n          color: currentTheme.text\n        }}>\n          Component Portal\n        </h2>\n\n        <div style={{\n          display: 'flex',\n          gap: '12px'\n        }}>\n          <button\n            onClick={() => setActiveTab('import')}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: activeTab === 'import' ? currentTheme.primary : 'transparent',\n              color: activeTab === 'import' ? 'white' : currentTheme.text,\n              border: `1px solid ${currentTheme.border}`,\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '12px'\n            }}\n          >\n            Import from 3200\n          </button>\n          <button\n            onClick={() => setActiveTab('export')}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: activeTab === 'export' ? currentTheme.primary : 'transparent',\n              color: activeTab === 'export' ? 'white' : currentTheme.text,\n              border: `1px solid ${currentTheme.border}`,\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '12px'\n            }}\n          >\n            Export to 3200\n          </button>\n        </div>\n      </div>\n\n      {/* Component List */}\n      <div style={{\n        flex: 1,\n        padding: '24px',\n        overflowY: 'auto'\n      }}>\n        {loading ? (\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n            color: currentTheme.textSecondary\n          }}>\n            Loading components...\n          </div>\n        ) : (\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n            gap: '16px'\n          }}>\n            {(activeTab === 'import' ? port3200Components : localComponents).map(component => (\n              <motion.div\n                key={component.id}\n                whileHover={{ scale: 1.02 }}\n                onClick={() => toggleSelection(component.id)}\n                style={{\n                  padding: '16px',\n                  backgroundColor: currentTheme.surface,\n                  border: `2px solid ${selectedComponents.has(component.id) ? currentTheme.primary : currentTheme.border}`,\n                  borderRadius: '8px',\n                  cursor: 'pointer',\n                  position: 'relative'\n                }}\n              >\n                {/* Selection Checkbox */}\n                <div style={{\n                  position: 'absolute',\n                  top: '12px',\n                  right: '12px',\n                  width: '20px',\n                  height: '20px',\n                  borderRadius: '4px',\n                  border: `2px solid ${currentTheme.border}`,\n                  backgroundColor: selectedComponents.has(component.id) ? currentTheme.primary : 'transparent',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}>\n                  {selectedComponents.has(component.id) && (\n                    <span style={{ color: 'white', fontSize: '12px' }}>✓</span>\n                  )}\n                </div>\n\n                <h3 style={{\n                  margin: '0 0 8px 0',\n                  fontSize: '14px',\n                  fontWeight: '600',\n                  color: currentTheme.text\n                }}>\n                  {component.name || component.displayName}\n                </h3>\n\n                <p style={{\n                  margin: '0 0 12px 0',\n                  fontSize: '12px',\n                  color: currentTheme.textSecondary,\n                  lineHeight: 1.4\n                }}>\n                  {component.description}\n                </p>\n\n                <div style={{\n                  display: 'flex',\n                  gap: '8px',\n                  flexWrap: 'wrap'\n                }}>\n                  <span style={{\n                    fontSize: '10px',\n                    padding: '2px 8px',\n                    backgroundColor: `${currentTheme.primary}20`,\n                    color: currentTheme.primary,\n                    borderRadius: '4px'\n                  }}>\n                    {component.quality || 'quality'}\n                  </span>\n                  {component.tags?.slice(0, 2).map(tag => (\n                    <span\n                      key={tag}\n                      style={{\n                        fontSize: '10px',\n                        padding: '2px 8px',\n                        backgroundColor: `${currentTheme.border}`,\n                        color: currentTheme.textSecondary,\n                        borderRadius: '4px'\n                      }}\n                    >\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n\n                {/* Import Result */}\n                {importResults.has(component.id) && (\n                  <div style={{\n                    marginTop: '12px',\n                    padding: '8px',\n                    backgroundColor: importResults.get(component.id).success \n                      ? `${currentTheme.success}20` \n                      : `${currentTheme.danger}20`,\n                    borderRadius: '4px',\n                    fontSize: '11px'\n                  }}>\n                    {importResults.get(component.id).success ? '✅ Imported' : '❌ Failed'}\n                  </div>\n                )}\n              </motion.div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Action Bar */}\n      {selectedComponents.size > 0 && (\n        <div style={{\n          padding: '16px 24px',\n          backgroundColor: currentTheme.surface,\n          borderTop: `1px solid ${currentTheme.border}`,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <span style={{\n            fontSize: '12px',\n            color: currentTheme.textSecondary\n          }}>\n            {selectedComponents.size} component{selectedComponents.size !== 1 ? 's' : ''} selected\n          </span>\n\n          <button\n            onClick={activeTab === 'import' ? handleImport : handleExport}\n            disabled={loading}\n            style={{\n              padding: '8px 24px',\n              backgroundColor: currentTheme.primary,\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: loading ? 'not-allowed' : 'pointer',\n              fontSize: '12px',\n              opacity: loading ? 0.6 : 1\n            }}\n          >\n            {loading ? 'Processing...' : (activeTab === 'import' ? 'Import Selected' : 'Export Selected')}\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":["ContractValidator","contract","errors","warnings","score","metadataResult","capabilitiesResult","lifecycleResult","dataResult","metadata","penaltyPoints","validCategories","capabilities","key","lifecycle","requiredMethods","method","recommendedMethods","dataContract","input","index","entry","contractResult","result","report","error","warning","ComponentImportService","componentId","response","source","component","validation","sourceComponent","valid","e","w","componentInventory","componentCode","componentIds","results","id","ComponentExportService","meta","name","defaultValue","exportData","packageJson","acc","dep","readme","prop","exports","components","componentExportService","ComponentPortal","currentTheme","useTheme","activeTab","setActiveTab","useState","port3200Components","setPort3200Components","localComponents","setLocalComponents","loading","setLoading","selectedComponents","setSelectedComponents","importResults","setImportResults","componentImportService","useEffect","loadPort3200Components","loadLocalComponents","c","handleImport","handleExport","toggleSelection","newSelection","jsxs","jsx","motion","tag"],"mappings":"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"}