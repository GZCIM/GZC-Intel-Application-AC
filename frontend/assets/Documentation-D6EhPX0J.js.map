{"version":3,"file":"Documentation-D6EhPX0J.js","sources":["../../src/components/Documentation.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\n\n// Declare mermaid on window\ndeclare global {\n  interface Window {\n    mermaid: any;\n  }\n}\n\ninterface DocSection {\n  title: string;\n  content: React.ReactNode;\n}\n\n// Mermaid diagram with zoom, scroll, and drag controls\nconst MermaidDiagram: React.FC<{ chart: string; id: string; isActive: boolean }> = ({ chart, id, isActive }) => {\n  const { currentTheme: theme } = useTheme();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [renderKey, setRenderKey] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [scrollStart, setScrollStart] = useState({ x: 0, y: 0 });\n  \n  // Force re-render when tab becomes active or theme changes\n  useEffect(() => {\n    if (isActive) {\n      setRenderKey(prev => prev + 1);\n    }\n  }, [isActive, theme.name]);\n  \n  // Render diagram when active\n  useEffect(() => {\n    const renderDiagram = async () => {\n      if (window.mermaid && containerRef.current && isActive) {\n        try {\n          // Clear any existing content\n          containerRef.current.innerHTML = '';\n          \n          // Create a new div for this render with fixed sizing\n          const diagramDiv = document.createElement('div');\n          diagramDiv.className = 'mermaid';\n          diagramDiv.textContent = chart;\n          diagramDiv.style.width = '1600px';  // Doubled width for horizontal scrolling\n          diagramDiv.style.height = '800px';  // Doubled height\n          containerRef.current.appendChild(diagramDiv);\n          \n          // Render with mermaid\n          await window.mermaid.run({\n            nodes: [diagramDiv]\n          });\n          \n          // Apply zoom to the SVG\n          const svg = diagramDiv.querySelector('svg');\n          if (svg) {\n            svg.style.width = '100%';\n            svg.style.height = '100%';\n            svg.style.transform = `scale(${zoomLevel})`;\n            svg.style.transformOrigin = 'top left';\n          }\n          \n        } catch (error) {\n          console.error(`Mermaid rendering error for ${id}:`, error);\n          if (containerRef.current) {\n            containerRef.current.innerHTML = `\n              <div style=\"padding: 16px; text-align: left; font-size: 11px; color: ${theme.textSecondary};\">\n                <div style=\"margin-bottom: 8px;\">⚠️ Diagram failed to render</div>\n                <details>\n                  <summary style=\"cursor: pointer; margin-bottom: 8px;\">Show diagram code</summary>\n                  <pre style=\"background: ${theme.background}; padding: 8px; border-radius: 3px; overflow: auto; font-size: 10px;\">${chart}</pre>\n                </details>\n              </div>\n            `;\n          }\n        }\n      }\n    };\n\n    if (isActive && renderKey > 0) {\n      // Delay to ensure DOM is ready\n      setTimeout(renderDiagram, 300);\n    }\n  }, [renderKey, isActive, chart, id, theme, zoomLevel]);\n\n  // Mouse drag handlers\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (scrollContainerRef.current) {\n      setIsDragging(true);\n      setDragStart({ x: e.clientX, y: e.clientY });\n      setScrollStart({ \n        x: scrollContainerRef.current.scrollLeft, \n        y: scrollContainerRef.current.scrollTop \n      });\n      e.preventDefault();\n    }\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (isDragging && scrollContainerRef.current) {\n      const deltaX = dragStart.x - e.clientX;\n      const deltaY = dragStart.y - e.clientY;\n      \n      scrollContainerRef.current.scrollLeft = scrollStart.x + deltaX;\n      scrollContainerRef.current.scrollTop = scrollStart.y + deltaY;\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Global mouse up handler\n  useEffect(() => {\n    if (isDragging) {\n      const handleGlobalMouseUp = () => setIsDragging(false);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n      return () => document.removeEventListener('mouseup', handleGlobalMouseUp);\n    }\n  }, [isDragging]);\n  \n  return (\n    <div \n      style={{ \n        margin: '8px 0',\n        backgroundColor: theme.surfaceAlt,\n        border: `1px solid ${theme.border}`,\n        borderRadius: '4px',\n        overflow: 'hidden'\n      }}\n    >\n      {/* Zoom Controls */}\n      {isActive && (\n        <div style={{\n          padding: '8px 12px',\n          backgroundColor: theme.surface,\n          borderBottom: `1px solid ${theme.border}`,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        }}>\n          <span style={{ fontSize: '10px', color: theme.textSecondary }}>\n            Zoom: {Math.round(zoomLevel * 100)}% • Click & drag to pan • Scroll both ways\n          </span>\n          <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n            <button\n              onClick={() => setZoomLevel(prev => Math.max(0.5, prev - 0.1))}\n              style={{\n                padding: '4px 8px',\n                fontSize: '10px',\n                backgroundColor: theme.background,\n                border: `1px solid ${theme.border}`,\n                borderRadius: '2px',\n                color: theme.text,\n                cursor: 'pointer'\n              }}\n            >\n              −\n            </button>\n            <span style={{ fontSize: '10px', color: theme.text, minWidth: '30px', textAlign: 'center' }}>\n              {Math.round(zoomLevel * 100)}%\n            </span>\n            <button\n              onClick={() => setZoomLevel(prev => Math.min(2, prev + 0.1))}\n              style={{\n                padding: '4px 8px',\n                fontSize: '10px',\n                backgroundColor: theme.background,\n                border: `1px solid ${theme.border}`,\n                borderRadius: '2px',\n                color: theme.text,\n                cursor: 'pointer'\n              }}\n            >\n              +\n            </button>\n            <button\n              onClick={() => setZoomLevel(1)}\n              style={{\n                padding: '4px 8px',\n                fontSize: '10px',\n                backgroundColor: theme.background,\n                border: `1px solid ${theme.border}`,\n                borderRadius: '2px',\n                color: theme.text,\n                cursor: 'pointer'\n              }}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Scrollable Diagram Container with Drag Support */}\n      <div \n        ref={scrollContainerRef}\n        style={{ \n          height: '600px', // Doubled container height\n          overflow: 'auto', // Both horizontal and vertical scrolling\n          backgroundColor: theme.background,\n          cursor: isDragging ? 'grabbing' : 'grab',\n          userSelect: 'none'\n        }}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <div \n          ref={containerRef}\n          style={{ \n            background: 'transparent', \n            margin: 0,\n            minWidth: '1600px',  // Doubled width to enable horizontal scrolling\n            minHeight: '800px',  // Doubled height\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            pointerEvents: isDragging ? 'none' : 'auto'\n          }}\n        >\n          {!isActive && (\n            <div style={{ \n              color: theme.textTertiary, \n              fontSize: '12px'\n            }}>\n              Switch to this tab to view diagram\n            </div>\n          )}\n          {isActive && renderKey === 0 && (\n            <div style={{ \n              color: theme.textTertiary, \n              fontSize: '12px'\n            }}>\n              Preparing diagram...\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Documentation: React.FC = () => {\n  const { currentTheme: theme } = useTheme();\n  const [activeSection, setActiveSection] = useState(0);\n  const [mermaidLoaded, setMermaidLoaded] = useState(false);\n\n  const sections: DocSection[] = [\n    {\n      title: 'Current Architecture',\n      content: (\n        <div>\n          <p style={{ marginBottom: '20px', color: theme.textSecondary }}>\n            GZC Intel App is a modern financial intelligence dashboard built with React, TypeScript, and Vite. \n            It features a comprehensive theme system, drag-and-drop widgets, and professional trading interface.\n          </p>\n          <MermaidDiagram \n            id=\"current-architecture\"\n            isActive={activeSection === 0}\n            chart={`graph TD\n    UI[React + TypeScript] --> Theme[Theme System]\n    UI --> Tabs[Tab Management]\n    UI --> DnD[React Grid Layout]\n    \n    Theme --> Header[Professional Header]\n    Theme --> Intel[Market Intel Panel]\n    Theme --> Docs[Documentation]\n    Theme --> Analytics[Analytics Tab]\n    \n    Theme --> Context[React Context]\n    Context --> Local[LocalStorage]\n    Context --> Memory[View Memory]\n    Memory --> Inspector[Memory Inspector]\n    \n    Tabs --> Header\n    Tabs --> Intel\n    Tabs --> Docs\n    Tabs --> Analytics`}\n          />\n        </div>\n      )\n    },\n    {\n      title: 'Theme System',\n      content: (\n        <div>\n          <p style={{ marginBottom: '20px', color: theme.textSecondary }}>\n            The application features 11 professionally designed themes, each optimized for different use cases and preferences.\n          </p>\n          <MermaidDiagram \n            id=\"theme-system\"\n            isActive={activeSection === 1}\n            chart={`graph TD\n    TP[Theme Provider] --> GD[GZC Dark]\n    TP --> AD[Analytics Dark]\n    TP --> TG[Terminal Green]\n    TP --> TO[Trading Operations]\n    TP --> MT[Midnight Trading]\n    TP --> QA[Quantum Analytics]\n    TP --> PR[Professional]\n    \n    TP --> GL[GZC Light]\n    TP --> AR[Arctic]\n    TP --> PA[Parchment]\n    TP --> PE[Pearl]\n    \n    TP --> LS[LocalStorage]\n    TP --> CV[CSS Variables]\n    TP --> VM[View Memory]\n    \n    LS --> VM\n    CV --> GD\n    CV --> GL\n    VM --> LS`}\n          />\n          <div style={{\n            backgroundColor: theme.surface,\n            border: `1px solid ${theme.border}`,\n            borderRadius: '4px',\n            padding: '16px',\n            marginTop: '20px'\n          }}>\n            <h4 style={{ marginBottom: '8px', color: theme.primary }}>Current Theme: {theme.name}</h4>\n            <p style={{ margin: 0, fontSize: '12px' }}>\n              Each theme includes carefully selected colors for text, backgrounds, borders, and status indicators.\n              All themes maintain the GZC institutional green for success states and branding consistency.\n            </p>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Component Architecture',\n      content: (\n        <div>\n          <p style={{ marginBottom: '20px', color: theme.textSecondary }}>\n            The application uses a modular component architecture with lazy loading and dynamic imports.\n          </p>\n          <MermaidDiagram \n            id=\"component-architecture\"\n            isActive={activeSection === 2}\n            chart={`graph TD\n    App[App.tsx] --> TP[ThemeProvider]\n    App --> TLP[TabLayoutProvider]\n    App --> EB[ErrorBoundary]\n    \n    TP --> PH[ProfessionalHeader]\n    TP --> MIP[MarketIntelPanel]\n    TP --> TC[TabContainer]\n    \n    TLP --> TC\n    EB --> PH\n    EB --> MIP\n    \n    TC --> AT[Analytics Tab]\n    TC --> DT[Documentation Tab]\n    \n    VM[ViewMemory Hook] --> TP\n    VM --> TLP\n    \n    PH --> Tabs[Tab Management]\n    MIP --> Alerts[AI Agents]\n    TC --> Widgets[Widget System]`}\n          />\n        </div>\n      )\n    },\n    {\n      title: 'Recent Updates',\n      content: (\n        <div>\n          <h4 style={{ marginBottom: '16px' }}>Latest Changes</h4>\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n            gap: '12px',\n            marginBottom: '20px'\n          }}>\n            <div style={{\n              backgroundColor: theme.surface,\n              border: `1px solid ${theme.border}`,\n              borderRadius: '4px',\n              padding: '16px'\n            }}>\n              <h5 style={{ color: theme.success, marginBottom: '8px' }}>✓ Completed Features</h5>\n              <ul style={{ margin: 0, paddingLeft: '20px', fontSize: '12px' }}>\n                <li>11 professional themes with instant switching</li>\n                <li>Theme persistence in localStorage</li>\n                <li>Professional header with GZC logo</li>\n                <li>Market Intel panel with AI agents</li>\n                <li>Drag & drop tab reordering</li>\n                <li>P&L display with real-time updates</li>\n                <li>Documentation with mermaid diagrams</li>\n                <li>Responsive layout system</li>\n              </ul>\n            </div>\n            <div style={{\n              backgroundColor: theme.surface,\n              border: `1px solid ${theme.border}`,\n              borderRadius: '4px',\n              padding: '16px'\n            }}>\n              <h5 style={{ color: theme.warning, marginBottom: '8px' }}>🔄 In Progress</h5>\n              <ul style={{ margin: 0, paddingLeft: '20px', fontSize: '12px' }}>\n                <li>Analytics widgets implementation</li>\n                <li>Real-time market data integration</li>\n                <li>Portfolio management features</li>\n                <li>Advanced charting components</li>\n              </ul>\n            </div>\n            <div style={{\n              backgroundColor: theme.surface,\n              border: `1px solid ${theme.border}`,\n              borderRadius: '4px',\n              padding: '16px'\n            }}>\n              <h5 style={{ color: theme.info, marginBottom: '8px' }}>📋 Planned Features</h5>\n              <ul style={{ margin: 0, paddingLeft: '20px', fontSize: '12px' }}>\n                <li>WebSocket for real-time updates</li>\n                <li>Advanced risk analytics</li>\n                <li>Multi-asset portfolio tracking</li>\n                <li>AI-powered market insights</li>\n                <li>Customizable dashboards</li>\n                <li>Export/Import configurations</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Technical Stack',\n      content: (\n        <div>\n          <h4 style={{ marginBottom: '16px' }}>Frontend Technologies</h4>\n          <div style={{\n            backgroundColor: theme.surface,\n            border: `1px solid ${theme.border}`,\n            borderRadius: '4px',\n            padding: '16px',\n            marginBottom: '16px'\n          }}>\n            <pre style={{\n              backgroundColor: theme.background,\n              padding: '12px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              overflow: 'auto',\n              color: theme.text,\n              margin: 0\n            }}>\n{`{\n  \"core\": {\n    \"react\": \"^18.3.1\",\n    \"typescript\": \"~5.6.2\",\n    \"vite\": \"^6.0.5\",\n    \"react-router-dom\": \"^7.1.1\"\n  },\n  \"ui\": {\n    \"react-grid-layout\": \"^1.5.0\",\n    \"framer-motion\": \"^11.15.0\",\n    \"recharts\": \"^2.15.0\",\n    \"react-hot-toast\": \"^2.4.1\"\n  },\n  \"development\": {\n    \"vitest\": \"^2.1.8\",\n    \"@testing-library/react\": \"^16.1.0\",\n    \"storybook\": \"^8.5.0-alpha.26\",\n    \"eslint\": \"^9.17.0\"\n  },\n  \"features\": {\n    \"themes\": 11,\n    \"tabs\": \"dynamic\",\n    \"state\": \"context + localStorage\",\n    \"styling\": \"CSS-in-JS\"\n  }\n}`}\n            </pre>\n          </div>\n          <div style={{\n            backgroundColor: theme.surface,\n            border: `1px solid ${theme.border}`,\n            borderRadius: '4px',\n            padding: '16px'\n          }}>\n            <h5 style={{ color: theme.primary, marginBottom: '12px' }}>Key Features</h5>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px', fontSize: '12px' }}>\n              <div>\n                <strong style={{ color: theme.text }}>Performance</strong>\n                <ul style={{ margin: '4px 0', paddingLeft: '20px' }}>\n                  <li>Lazy loading with code splitting</li>\n                  <li>Memoized components</li>\n                  <li>Virtual scrolling ready</li>\n                  <li>Optimized re-renders</li>\n                </ul>\n              </div>\n              <div>\n                <strong style={{ color: theme.text }}>Developer Experience</strong>\n                <ul style={{ margin: '4px 0', paddingLeft: '20px' }}>\n                  <li>Hot Module Replacement</li>\n                  <li>TypeScript strict mode</li>\n                  <li>ESLint + Prettier</li>\n                  <li>Comprehensive testing</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Development Guide',\n      content: (\n        <div>\n          <h4 style={{ marginBottom: '16px' }}>Getting Started</h4>\n          <div style={{\n            backgroundColor: theme.surface,\n            border: `1px solid ${theme.border}`,\n            borderRadius: '4px',\n            padding: '16px',\n            marginBottom: '16px'\n          }}>\n            <h5 style={{ color: theme.primary, marginBottom: '12px' }}>Development Commands</h5>\n            <pre style={{\n              backgroundColor: theme.background,\n              padding: '12px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              overflow: 'auto',\n              color: theme.text,\n              margin: 0\n            }}>\n{`# Install dependencies\nnpm install\n\n# Start development server\nnpm run dev              # http://localhost:3500\n\n# Run with debugging\nnpm run dev:debug        # Chrome DevTools enabled\n\n# Testing\nnpm test                 # Run tests\nnpm run test:ui          # Vitest UI\nnpm run test:coverage    # Coverage report\n\n# Build\nnpm run build            # Production build\nnpm run build:analyze    # Bundle analysis\n\n# Code quality\nnpm run lint             # ESLint\nnpm run type-check       # TypeScript`}\n            </pre>\n          </div>\n          <div style={{\n            backgroundColor: theme.surface,\n            border: `1px solid ${theme.border}`,\n            borderRadius: '4px',\n            padding: '16px'\n          }}>\n            <h5 style={{ color: theme.primary, marginBottom: '12px' }}>Adding a New Theme</h5>\n            <pre style={{\n              backgroundColor: theme.background,\n              padding: '12px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              overflow: 'auto',\n              color: theme.text,\n              margin: 0\n            }}>\n{`// src/theme/themes.ts\nexport const themes: Record<string, Theme> = {\n  // ... existing themes\n  'my-theme': {\n    name: 'My Theme',\n    primary: '#color',\n    secondary: '#color',\n    accent: '#color',\n    background: '#color',\n    surface: '#color',\n    surfaceAlt: '#color',\n    text: '#color',\n    textSecondary: '#color',\n    textTertiary: '#color',\n    border: '#color',\n    borderLight: '#color',\n    success: GZC_GREEN.base,\n    danger: '#color',\n    warning: '#color',\n    info: '#color',\n    muted: '#color',\n    gradient: 'linear-gradient(...)',\n    headerColor: '#color',\n    shadows: { /* shadow config */ },\n    ...sharedConfig\n  }\n}`}\n            </pre>\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  useEffect(() => {\n    // Load Mermaid library only once\n    if (!window.mermaid) {\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js';\n      script.async = true;\n      script.onload = () => {\n        // Simple theme detection\n        const isDarkTheme = !theme.name.includes('Light') && \n                           theme.name !== 'Arctic' && \n                           theme.name !== 'Parchment' && \n                           theme.name !== 'Pearl';\n        \n        // Use mermaid's built-in themes with larger sizing\n        window.mermaid.initialize({ \n          startOnLoad: false, // We'll manually trigger rendering\n          theme: isDarkTheme ? 'dark' : 'default',\n          securityLevel: 'loose',\n          flowchart: {\n            nodeSpacing: 50,\n            rankSpacing: 60,\n            curve: 'linear'\n          },\n          themeVariables: {\n            fontSize: '16px',\n            fontFamily: 'Inter, system-ui, sans-serif'\n          }\n        });\n        setMermaidLoaded(true);\n      };\n      document.body.appendChild(script);\n    } else {\n      // Mermaid already loaded, just update theme\n      const isDarkTheme = !theme.name.includes('Light') && \n                         theme.name !== 'Arctic' && \n                         theme.name !== 'Parchment' && \n                         theme.name !== 'Pearl';\n      \n      window.mermaid.initialize({ \n        startOnLoad: false,\n        theme: isDarkTheme ? 'dark' : 'default',\n        securityLevel: 'loose',\n        flowchart: {\n          nodeSpacing: 60,\n          rankSpacing: 80,\n          curve: 'linear'\n        },\n        themeVariables: {\n          fontSize: '16px',\n          fontFamily: 'Inter, system-ui, sans-serif'\n        }\n      });\n      setMermaidLoaded(true);\n    }\n  }, [theme.name]);\n\n  // Clean up when component unmounts\n  useEffect(() => {\n    return () => {\n      // Clear any existing diagrams\n      document.querySelectorAll('.mermaid svg').forEach(el => el.remove());\n    };\n  }, []);\n\n  return (\n    <div style={{\n      height: 'calc(100vh - 88px)', // Match MarketIntelPanel height: header(48px) + footer(40px)\n      padding: '8px',\n      color: theme.text\n    }}>\n      <div style={{\n        display: 'flex',\n        gap: '8px',\n        height: 'calc(100% - 16px)' // Subtract padding\n      }}>\n        {/* Navigation */}\n        <div style={{\n          width: '200px',\n          backgroundColor: theme.surface,\n          borderRadius: '4px',\n          border: `1px solid ${theme.border}`,\n          padding: '8px',\n          overflow: 'auto',\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <h3 style={{\n            fontSize: '10px',\n            fontWeight: theme.typography.h3.fontWeight,\n            marginBottom: '8px',\n            color: theme.textSecondary,\n            textTransform: 'uppercase',\n            letterSpacing: '0.5px'\n          }}>\n            Contents\n          </h3>\n          {sections.map((section, index) => (\n            <div\n              key={index}\n              onClick={() => setActiveSection(index)}\n              style={{\n                padding: '6px 8px',\n                marginBottom: '2px',\n                borderRadius: '2px',\n                cursor: 'pointer',\n                fontSize: '11px',\n                backgroundColor: activeSection === index \n                  ? theme.name.includes('Light') || theme.name === 'Arctic' || theme.name === 'Parchment' || theme.name === 'Pearl'\n                    ? 'rgba(0, 0, 0, 0.05)'\n                    : 'rgba(255, 255, 255, 0.05)'\n                  : 'transparent',\n                borderLeft: activeSection === index ? `2px solid ${theme.primary}` : '2px solid transparent',\n                transition: 'all 0.2s ease',\n                color: activeSection === index ? theme.primary : theme.text\n              }}\n              onMouseEnter={(e) => {\n                if (activeSection !== index) {\n                  e.currentTarget.style.backgroundColor = theme.name.includes('Light') || theme.name === 'Arctic' || theme.name === 'Parchment' || theme.name === 'Pearl'\n                    ? 'rgba(0, 0, 0, 0.02)'\n                    : 'rgba(255, 255, 255, 0.02)';\n                }\n              }}\n              onMouseLeave={(e) => {\n                if (activeSection !== index) {\n                  e.currentTarget.style.backgroundColor = 'transparent';\n                }\n              }}\n            >\n              {section.title}\n            </div>\n          ))}\n        </div>\n\n        {/* Content */}\n        <div style={{\n          flex: 1,\n          backgroundColor: theme.surface,\n          borderRadius: '4px',\n          border: `1px solid ${theme.border}`,\n          padding: '16px',\n          overflow: 'auto',\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <h2 style={{\n            fontSize: '13px',\n            fontWeight: '600',\n            marginBottom: '12px',\n            color: theme.text\n          }}>\n            {sections[activeSection].title}\n          </h2>\n          <div style={{\n            fontSize: theme.typography.body.fontSize,\n            lineHeight: 1.6\n          }}>\n            {sections[activeSection].content}\n          </div>\n        </div>\n      </div>\n\n      <div style={{\n        marginTop: '8px',\n        padding: '6px 8px',\n        backgroundColor: theme.surface,\n        borderRadius: '4px',\n        border: `1px solid ${theme.border}`,\n        textAlign: 'center',\n        fontSize: '9px',\n        color: theme.textSecondary,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }}>\n        <span>Updated: {new Date().toLocaleDateString()}</span>\n        <span>v1.0.0</span>\n        <span>{theme.name}</span>\n      </div>\n    </div>\n  );\n};"],"names":["MermaidDiagram","chart","id","isActive","theme","useTheme","containerRef","useRef","scrollContainerRef","renderKey","setRenderKey","useState","zoomLevel","setZoomLevel","isDragging","setIsDragging","dragStart","setDragStart","scrollStart","setScrollStart","useEffect","prev","renderDiagram","diagramDiv","svg","error","handleMouseDown","e","handleMouseMove","deltaX","deltaY","handleMouseUp","handleGlobalMouseUp","jsxs","jsx","Documentation","activeSection","setActiveSection","mermaidLoaded","setMermaidLoaded","sections","isDarkTheme","script","el","section","index"],"mappings":"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"}