worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Enhanced logging with request ID for tracing
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'request_id=$request_id response_time=$request_time';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/x-js text/x-cross-domain-policy application/x-font-ttf 
               application/x-font-opentype application/vnd.ms-fontobject 
               image/x-icon;
    
    # Security: Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Request ID for tracing
    map $http_x_request_id $request_id {
        default   $http_x_request_id;
        ""        $request_time-$msec;
    }
    
    # Internal upstream services (not exposed externally)
    upstream frontend_service {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream fastapi_service {
        least_conn;
        server fastapi-backend:5000 max_fails=3 fail_timeout=30s;
        keepalive 64;
    }
    
    upstream websocket_service {
        ip_hash;  # Sticky sessions for WebSocket
        server websocket-backend:5100 max_fails=3 fail_timeout=30s;
    }
    
    # Main server block - ONLY exposed endpoint
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security headers (applied globally)
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Request-ID $request_id always;
        
        # Hide server version
        server_tokens off;
        more_clear_headers Server;
        
        # Connection limits
        limit_conn addr 100;
        
        # Static Frontend (React)
        location / {
            limit_req zone=general burst=50 nodelay;
            
            proxy_pass http://frontend_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Frontend caching
            proxy_cache_bypass $http_upgrade;
            proxy_cache_valid 200 1m;
        }
        
        # API Gateway to FastAPI Backend
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Azure AD Authentication check (can be enhanced with auth_request)
            # auth_request /auth/verify;
            
            # CORS (configure based on your needs)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Request-ID' always;
                add_header 'Access-Control-Max-Age' 86400;
                return 204;
            }
            
            # Proxy to FastAPI
            proxy_pass http://fastapi_service/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Pass Azure AD token
            proxy_set_header Authorization $http_authorization;
            
            # Timeouts for API calls
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # User preferences/memory endpoints (FastAPI)
        location /api/preferences/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://fastapi_service/api/preferences/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header Authorization $http_authorization;
        }
        
        # Authentication endpoints with strict rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://fastapi_service/api/auth/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
        
        # WebSocket endpoints (Flask)
        location ~ ^/ws_(esp|rfs|execution) {
            limit_req zone=general burst=5 nodelay;
            
            proxy_pass http://websocket_service;
            proxy_http_version 1.1;
            
            # WebSocket upgrade headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-ID $request_id;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 30s;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }
        
        # Health check endpoint (gateway level)
        location /health {
            access_log off;
            limit_req zone=general burst=5 nodelay;
            
            return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }
        
        # Service health checks (internal)
        location /health/services {
            internal;  # Only accessible internally
            
            proxy_pass http://fastapi_service/health;
            proxy_set_header X-Health-Check "true";
        }
        
        # Block all other paths
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Internal server for monitoring (not exposed)
    server {
        listen 127.0.0.1:8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
}