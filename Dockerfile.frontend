# Frontend-only Dockerfile for GZC Intel Application AC
# Uses existing deployed backend services

# Stage 1: Build Frontend
FROM node:20-alpine AS frontend-builder

WORKDIR /app/frontend

# Copy frontend package files
COPY Main_Frontend/package*.json ./
RUN npm ci

# Copy frontend source
COPY Main_Frontend/ ./

# Build frontend (already built in dist/ but rebuild to ensure latest)
RUN npm run build:skip-ts

# Stage 2: Nginx to serve static files
FROM nginx:alpine

# Copy built frontend to nginx
COPY --from=frontend-builder /app/frontend/dist /usr/share/nginx/html

# Copy nginx configuration for SPA routing and API proxying
RUN echo 'server { \
    listen 80; \
    server_name _; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # SPA routing - serve index.html for all routes \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    # Proxy API calls to backend gateway (already deployed) \
    location /api/ { \
        proxy_pass https://gzc-intel-gateway.delightfulground-653e61be.eastus.azurecontainerapps.io; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    # Proxy WebSocket connections to FSS backend (already deployed) \
    location /ws { \
        proxy_pass wss://fxspotstream.delightfulground-653e61be.eastus.azurecontainerapps.io; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]