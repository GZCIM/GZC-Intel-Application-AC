# Production Nginx Configuration for GZC Intel Application
# Version: 2.0.0
# Security Level: Enterprise-grade with TLS 1.3

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_modsecurity_module.so;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Enhanced logging with security context
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'request_id=$request_id '
                       'processing_time=$request_time '
                       'upstream_time=$upstream_response_time '
                       'ssl_protocol=$ssl_protocol '
                       'ssl_cipher=$ssl_cipher';
    
    access_log /var/log/nginx/access.log security buffer=32k flush=5s;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    
    # Security limits
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    client_max_body_size 20M;
    large_client_header_buffers 4 8k;
    
    # Hide version information
    server_tokens off;
    more_clear_headers Server;
    more_clear_headers X-Powered-By;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               application/x-font-ttf application/x-font-opentype 
               application/vnd.ms-fontobject image/x-icon;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/chain.pem;
    
    # DNS Resolver for OCSP stapling
    resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
    resolver_timeout 5s;
    
    # Security headers (global)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy
    set $csp_default "default-src 'self' https:";
    set $csp_script "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com";
    set $csp_style "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com";
    set $csp_font "font-src 'self' data: https://fonts.gstatic.com";
    set $csp_img "img-src 'self' data: https: blob:";
    set $csp_connect "connect-src 'self' wss: https:";
    set $csp_frame "frame-ancestors 'none'";
    add_header Content-Security-Policy "${csp_default}; ${csp_script}; ${csp_style}; ${csp_font}; ${csp_img}; ${csp_connect}; ${csp_frame}" always;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:20m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=api:20m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr:20m;
    
    # DDoS protection - connection limits per IP
    limit_conn addr 100;
    
    # Request ID generation for distributed tracing
    map $http_x_request_id $request_id {
        default   $http_x_request_id;
        ""        $request_time-$msec-$remote_addr-$connection;
    }
    
    # ModSecurity WAF
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;
    
    # Upstream configuration with health checks
    upstream frontend_service {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_timeout 60s;
    }
    
    upstream fastapi_service {
        least_conn;
        server fastapi-backend:5000 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_timeout 60s;
    }
    
    upstream websocket_service {
        ip_hash;
        server websocket-backend:5100 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Map for WebSocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Health check endpoint (for load balancers)
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"gateway","protocol":"http"}';
            add_header Content-Type application/json;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name gzc-intel-application-ac.delightfulground-653e61be.eastus.azurecontainerapps.io;
        
        # SSL certificates
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        ssl_dhparam /etc/nginx/certs/dhparam.pem;
        
        # Enable OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Request body size limits per endpoint
        client_max_body_size 20M;
        
        # Static frontend (React)
        location / {
            limit_req zone=general burst=50 nodelay;
            limit_except GET HEAD OPTIONS {
                deny all;
            }
            
            proxy_pass http://frontend_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Request-ID $request_id;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend_service;
                proxy_cache_valid 200 1h;
                proxy_cache_bypass $http_cache_control;
                add_header Cache-Control "public, max-age=3600";
            }
        }
        
        # API endpoints with authentication
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Validate JWT token presence
            if ($http_authorization = "") {
                return 401 '{"error":"Authorization required","code":"AUTH_MISSING"}';
            }
            
            # CORS headers
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://$host' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Request-ID' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 86400;
                return 204;
            }
            
            proxy_pass http://fastapi_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header Authorization $http_authorization;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Security headers for API
            add_header X-Content-Type-Options "nosniff" always;
            add_header Cache-Control "no-store, no-cache, must-revalidate, private" always;
            add_header X-Request-ID $request_id always;
        }
        
        # User preferences endpoint (sensitive data)
        location /api/preferences/ {
            limit_req zone=api burst=10 nodelay;
            
            # Authentication required
            if ($http_authorization = "") {
                return 401 '{"error":"Authorization required for user data","code":"AUTH_REQUIRED"}';
            }
            
            proxy_pass http://fastapi_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header Authorization $http_authorization;
            
            # No caching for user data
            add_header Cache-Control "no-store, private" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # Authentication endpoints with strict rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://fastapi_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Request-ID $request_id;
            
            # Auth security
            add_header Cache-Control "no-store, no-cache, private" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # WebSocket endpoints
        location ~ ^/ws_(esp|rfs|execution) {
            limit_req zone=websocket burst=5 nodelay;
            
            # WebSocket authentication
            if ($http_authorization = "") {
                if ($arg_access_token = "") {
                    return 401 '{"error":"WebSocket authentication required","code":"WS_AUTH_MISSING"}';
                }
            }
            
            proxy_pass http://websocket_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header Authorization $http_authorization;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 30s;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
            proxy_cache off;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            limit_req zone=general burst=5 nodelay;
            
            return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601","ssl_protocol":"$ssl_protocol","ssl_cipher":"$ssl_cipher"}';
            add_header Content-Type application/json;
        }
        
        # Service health aggregation (internal use only)
        location /health/services {
            internal;
            proxy_pass http://fastapi_service/health;
            proxy_set_header X-Health-Check "true";
        }
        
        # Metrics endpoint (protected)
        location /metrics {
            # Only allow from monitoring systems
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            deny all;
            
            proxy_pass http://fastapi_service/metrics;
            add_header Content-Type text/plain;
        }
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 400 /errors/400.json;
        error_page 401 /errors/401.json;
        error_page 403 /errors/403.json;
        error_page 404 /errors/404.json;
        error_page 500 502 503 504 /errors/5xx.json;
        
        location ^~ /errors/ {
            internal;
            root /usr/share/nginx/html;
            add_header Content-Type application/json always;
        }
    }
    
    # Internal monitoring server
    server {
        listen 127.0.0.1:8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        location /nginx_health {
            access_log off;
            return 200 '{"status":"operational"}';
            add_header Content-Type application/json;
        }
    }
}